{"version":4,"artifacts":[{"module":{"file":"C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib\\index.js","base":"C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib","base_path":"index.js","canonical":"index","resolution":"ESM","id":"7e6ecbb3c3","hash":"7e6ecbb3c3acd72166bcc04c328e4a369c60cd02be3d37e8c240bcfb490f3541","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PanelChemistryExtensions = void 0;\r\nconst tslib_1 = require(\"tslib\");\r\nconst PanelChemistryExtensions = tslib_1.__importStar(require(\"./bokeh_extensions/\"));\r\nexports.PanelChemistryExtensions = PanelChemistryExtensions;\r\nconst base_1 = require(\"@bokehjs/base\");\r\nbase_1.register_models(PanelChemistryExtensions);\r\n//# sourceMappingURL=index.js.map\r\n","type":"js","dependency_paths":[["./bokeh_extensions/","C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib\\bokeh_extensions\\index.js"]],"dependency_map":[],"exported":[],"externals":[],"shims":[]},"code":{"source":"/* index.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    const tslib_1 = require(\"tslib\");\r\n    const PanelChemistryExtensions = tslib_1.__importStar(require(\"6ed169d807\") /* ./bokeh_extensions/ */);\r\n    exports.PanelChemistryExtensions = PanelChemistryExtensions;\r\n    const base_1 = require(\"@bokehjs/base\");\r\n    base_1.register_models(PanelChemistryExtensions);\r\n}\r\n","min_source":"function _(e,s,t,i,n){i();const o=e(\"tslib\").__importStar(e(\"6ed169d807\"));t.PanelChemistryExtensions=o;e(\"@bokehjs/base\").register_models(o)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"PanelChemistryExtensions\",\"__importStar\",\"register_models\"],\"mappings\":\"AAAe,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAC5DD,IACA,MACME,EADUL,EAAQ,SACiBM,aAAaN,EAAQ,eAC9DE,EAAQG,yBAA2BA,EACpBL,EAAQ,iBAChBO,gBAAgBF\",\"file\":\"index.min.js\"}"}},{"module":{"file":"C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib\\bokeh_extensions\\index.js","base":"C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib","base_path":"bokeh_extensions\\index.js","canonical":"bokeh_extensions/index","resolution":"ESM","id":"6ed169d807","hash":"6ed169d807326eb3252ed8b0b595121eb06f28019362f2d6bed29b70df5a0b99","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.JSMEEditor = void 0;\r\nvar jsme_editor_1 = require(\"./jsme_editor\");\r\nObject.defineProperty(exports, \"JSMEEditor\", { enumerable: true, get: function () { return jsme_editor_1.JSMEEditor; } });\r\n//# sourceMappingURL=index.js.map\r\n","type":"js","dependency_paths":[["./jsme_editor","C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib\\bokeh_extensions\\jsme_editor.js"]],"dependency_map":[],"exported":[{"type":"bindings","bindings":[[null,"JSMEEditor"]],"module":"./jsme_editor"}],"externals":[],"shims":[]},"code":{"source":"/* bokeh_extensions\\index.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    var jsme_editor_1 = require(\"2a8aa1384e\") /* ./jsme_editor */;\r\n    __esExport(\"JSMEEditor\", jsme_editor_1.JSMEEditor);\r\n}\r\n","min_source":"function _(E,a,i,o,t){o(),t(\"JSMEEditor\",E(\"2a8aa1384e\").JSMEEditor)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"JSMEEditor\"],\"mappings\":\"AAAgC,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAC7ED,IAEAC,EAAW,aADSJ,EAAQ,cACWK\",\"file\":\"index.min.js\"}"}},{"module":{"file":"C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib\\bokeh_extensions\\jsme_editor.js","base":"C:\\repos\\private\\panel-chemistry\\panel_chemistry\\dist\\lib","base_path":"bokeh_extensions\\jsme_editor.js","canonical":"bokeh_extensions/jsme_editor","resolution":"ESM","id":"2a8aa1384e","hash":"2a8aa1384e42d8d9a81233802bb528619cb6bd2d5bcd53ff021f9a35b466bcf8","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.JSMEEditor = exports.JSMEEditorView = void 0;\r\n// See https://docs.bokeh.org/en/latest/docs/reference/models/layouts.html\r\nconst html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\r\nconst dom_1 = require(\"@bokehjs/core/dom\");\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nconst notSubscribed = \"Not Subscribed\";\r\nfunction readSDFValue(jsmeElement) {\r\n    var data = jsmeElement.getMultiSDFstack();\r\n    var output = \"No multirecords SDF was pasted into the editor \";\r\n    if (data.length > 0) {\r\n        output = data.join(\"$$$$\\n\") + \"$$$$\\n\";\r\n    }\r\n    return output;\r\n}\r\nfunction setModelValue(model, jsmeElement) {\r\n    console.log(\"setValue - start\", model.value);\r\n    var value = model.value;\r\n    if (model.format === \"smiles\") {\r\n        console.log(\"getting smiles\");\r\n        value = jsmeElement.smiles();\r\n        console.log(\"got smiles\");\r\n    }\r\n    else if (model.format === \"mol\") {\r\n        value = jsmeElement.molFile(false);\r\n    }\r\n    else if (model.format === \"mol3000\") {\r\n        value = jsmeElement.molFile(true);\r\n    }\r\n    else if (model.format === \"sdf\") {\r\n        value = readSDFValue(jsmeElement);\r\n    }\r\n    else {\r\n        value = jsmeElement.jmeFile();\r\n    }\r\n    if (model.value !== value && value !== null) {\r\n        console.log(\"setting value\", value);\r\n        model.value = value;\r\n    }\r\n    console.log(\"setValue - end\", model.value);\r\n}\r\nfunction setModelValues(model, jsmeElement) {\r\n    console.log(\"setValues - start\");\r\n    setModelValue(model, jsmeElement);\r\n    setOtherModelValues(model, jsmeElement);\r\n    console.log(\"setValues - end\");\r\n}\r\nfunction resetOtherModelValues(model, jsmeElement) {\r\n    if (!model.subscriptions.includes(\"jme\")) {\r\n        model.jme = notSubscribed;\r\n    }\r\n    if (!model.subscriptions.includes(\"smiles\")) {\r\n        model.smiles = notSubscribed;\r\n    }\r\n    if (!model.subscriptions.includes(\"mol\")) {\r\n        model.mol = notSubscribed;\r\n    }\r\n    if (!model.subscriptions.includes(\"mol3000\")) {\r\n        model.mol3000 = notSubscribed;\r\n    }\r\n    if (!model.subscriptions.includes(\"sdf\")) {\r\n        model.sdf = notSubscribed;\r\n    }\r\n    setModelValues(model, jsmeElement);\r\n}\r\nfunction cleanValue(value) {\r\n    if (value === null) {\r\n        return \"null\";\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction setOtherModelValues(model, jsmeElement) {\r\n    console.log(\"setOtherValues - start\");\r\n    if (model.subscriptions.includes(\"jme\")) {\r\n        model.jme = cleanValue(jsmeElement.jmeFile());\r\n    }\r\n    if (model.subscriptions.includes(\"smiles\")) {\r\n        model.smiles = cleanValue(jsmeElement.smiles());\r\n    }\r\n    if (model.subscriptions.includes(\"mol\")) {\r\n        model.mol = cleanValue(jsmeElement.molFile(false));\r\n    }\r\n    if (model.subscriptions.includes(\"mol3000\")) {\r\n        model.mol3000 = cleanValue(jsmeElement.molFile(true));\r\n    }\r\n    if (model.subscriptions.includes(\"sdf\")) {\r\n        model.sdf = cleanValue(readSDFValue(jsmeElement));\r\n    }\r\n    console.log(\"setOtherValues - end\");\r\n}\r\n// The view of the Bokeh extension/ HTML element\r\n// Here you can define how to render the model as well as react to model changes or View events.\r\nclass JSMEEditorView extends html_box_1.HTMLBoxView {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.JSME = window.JSApplet.JSME;\r\n        this.valueChanging = true;\r\n    }\r\n    connect_signals() {\r\n        super.connect_signals();\r\n        this.connect(this.model.properties.value.change, () => {\r\n            console.log(\"value change\", this.model.value);\r\n            if (!this.valueChanging) {\r\n                if (this.model.value === \"\") {\r\n                    this.jsmeElement.reset();\r\n                }\r\n                else {\r\n                    this.jsmeElement.readGenericMolecularInput(this.model.value);\r\n                }\r\n            }\r\n        });\r\n        this.connect(this.model.properties.format.change, () => {\r\n            console.log(\"format change\", this.model.format);\r\n            setModelValue(this.model, this.jsmeElement);\r\n        });\r\n        this.connect(this.model.properties.subscriptions.change, () => {\r\n            console.log(\"subscriptions change\", this.model.subscriptions);\r\n            resetOtherModelValues(this.model, this.jsmeElement);\r\n        });\r\n        this.connect(this.model.properties.options.change, () => {\r\n            console.log(\"options change\", this.model.options);\r\n            this.setJSMEOptions();\r\n        });\r\n        this.connect(this.model.properties.guicolor.change, () => {\r\n            console.log(\"options change\", this.model.options);\r\n            this.setGUIColor();\r\n        });\r\n    }\r\n    render() {\r\n        console.log(\"render - start\");\r\n        super.render();\r\n        const id = \"jsme-\" + uuidv4();\r\n        const container = dom_1.div({ class: \"jsme-editor\", id: id });\r\n        this.el.appendChild(container);\r\n        this.jsmeElement = new this.JSME(id, this.getHeight(), this.getWidth(), {\r\n            \"options\": this.model.options.join(\",\"),\r\n            \"guicolor\": this.model.guicolor\r\n        });\r\n        this.jsmeElement.readGenericMolecularInput(this.model.value);\r\n        resetOtherModelValues(this.model, this.jsmeElement);\r\n        setModelValues(this.model, this.jsmeElement);\r\n        const this_ = this;\r\n        function showEvent(event) {\r\n            console.log(\"event\", event);\r\n            this_.valueChanging = true;\r\n            setModelValues(this_.model, this_.jsmeElement);\r\n            this_.valueChanging = false;\r\n        }\r\n        this.jsmeElement.setAfterStructureModifiedCallback(showEvent);\r\n        console.log(\"render - end\");\r\n    }\r\n    setGUIColor() {\r\n        console.log(\"setGUIColor\", this.model.guicolor);\r\n        this.jsmeElement.setUserInterfaceBackgroundColor(this.model.guicolor);\r\n    }\r\n    setJSMEOptions() {\r\n        const options = this.model.options.join(\",\");\r\n        console.log(\"setJSMEOptions\", options);\r\n        this.jsmeElement.options(options);\r\n    }\r\n    getHeight() {\r\n        if ((this.model.sizing_mode === \"stretch_height\" || this.model.sizing_mode === \"stretch_both\") && this.el.style.height) {\r\n            return this.el.style.height;\r\n        }\r\n        else if (this.model.height) {\r\n            return this.model.height.toString() + \"px\";\r\n        }\r\n        else {\r\n            return \"100px\";\r\n        }\r\n    }\r\n    getWidth() {\r\n        if ((this.model.sizing_mode === \"stretch_width\" || this.model.sizing_mode === \"stretch_both\") && this.el.style.width) {\r\n            return this.el.style.width;\r\n        }\r\n        else if (this.model.width) {\r\n            return this.model.width.toString() + \"px\";\r\n        }\r\n        else {\r\n            return \"100px\";\r\n        }\r\n    }\r\n    resizeJSMEElement() {\r\n        this.jsmeElement.setSize(this.getWidth(), this.getHeight());\r\n    }\r\n    after_layout() {\r\n        super.after_layout();\r\n        this.resizeJSMEElement();\r\n    }\r\n}\r\nexports.JSMEEditorView = JSMEEditorView;\r\nJSMEEditorView.__name__ = \"JSMEEditorView\";\r\n// The Bokeh .ts model corresponding to the Bokeh .py model\r\nclass JSMEEditor extends html_box_1.HTMLBox {\r\n    constructor(attrs) {\r\n        super(attrs);\r\n    }\r\n    static init_JSMEEditor() {\r\n        this.prototype.default_view = JSMEEditorView;\r\n        this.define(({ String, Array }) => ({\r\n            value: [String, \"\"],\r\n            format: [String, \"\"],\r\n            options: [Array(String), []],\r\n            jme: [String, \"\"],\r\n            smiles: [String, \"\"],\r\n            mol: [String, \"\"],\r\n            mol3000: [String, \"\"],\r\n            sdf: [String, \"\"],\r\n            subscriptions: [Array(String), []],\r\n            guicolor: [String, \"#FFFFFF\"],\r\n        }));\r\n    }\r\n}\r\nexports.JSMEEditor = JSMEEditor;\r\nJSMEEditor.__name__ = \"JSMEEditor\";\r\nJSMEEditor.__module__ = \"panel_chemistry.bokeh_extensions.jsme_editor\";\r\nJSMEEditor.init_JSMEEditor();\r\n//# sourceMappingURL=jsme_editor.js.map\r\n","type":"js","dependency_paths":[],"dependency_map":[],"exported":[{"type":"named","name":"JSMEEditorView"},{"type":"named","name":"JSMEEditor"}],"externals":[],"shims":[]},"code":{"source":"/* bokeh_extensions\\jsme_editor.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    // See https://docs.bokeh.org/en/latest/docs/reference/models/layouts.html\r\n    const html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\r\n    const dom_1 = require(\"@bokehjs/core/dom\");\r\n    function uuidv4() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n    const notSubscribed = \"Not Subscribed\";\r\n    function readSDFValue(jsmeElement) {\r\n        var data = jsmeElement.getMultiSDFstack();\r\n        var output = \"No multirecords SDF was pasted into the editor \";\r\n        if (data.length > 0) {\r\n            output = data.join(\"$$$$\\n\") + \"$$$$\\n\";\r\n        }\r\n        return output;\r\n    }\r\n    function setModelValue(model, jsmeElement) {\r\n        console.log(\"setValue - start\", model.value);\r\n        var value = model.value;\r\n        if (model.format === \"smiles\") {\r\n            console.log(\"getting smiles\");\r\n            value = jsmeElement.smiles();\r\n            console.log(\"got smiles\");\r\n        }\r\n        else if (model.format === \"mol\") {\r\n            value = jsmeElement.molFile(false);\r\n        }\r\n        else if (model.format === \"mol3000\") {\r\n            value = jsmeElement.molFile(true);\r\n        }\r\n        else if (model.format === \"sdf\") {\r\n            value = readSDFValue(jsmeElement);\r\n        }\r\n        else {\r\n            value = jsmeElement.jmeFile();\r\n        }\r\n        if (model.value !== value && value !== null) {\r\n            console.log(\"setting value\", value);\r\n            model.value = value;\r\n        }\r\n        console.log(\"setValue - end\", model.value);\r\n    }\r\n    function setModelValues(model, jsmeElement) {\r\n        console.log(\"setValues - start\");\r\n        setModelValue(model, jsmeElement);\r\n        setOtherModelValues(model, jsmeElement);\r\n        console.log(\"setValues - end\");\r\n    }\r\n    function resetOtherModelValues(model, jsmeElement) {\r\n        if (!model.subscriptions.includes(\"jme\")) {\r\n            model.jme = notSubscribed;\r\n        }\r\n        if (!model.subscriptions.includes(\"smiles\")) {\r\n            model.smiles = notSubscribed;\r\n        }\r\n        if (!model.subscriptions.includes(\"mol\")) {\r\n            model.mol = notSubscribed;\r\n        }\r\n        if (!model.subscriptions.includes(\"mol3000\")) {\r\n            model.mol3000 = notSubscribed;\r\n        }\r\n        if (!model.subscriptions.includes(\"sdf\")) {\r\n            model.sdf = notSubscribed;\r\n        }\r\n        setModelValues(model, jsmeElement);\r\n    }\r\n    function cleanValue(value) {\r\n        if (value === null) {\r\n            return \"null\";\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    function setOtherModelValues(model, jsmeElement) {\r\n        console.log(\"setOtherValues - start\");\r\n        if (model.subscriptions.includes(\"jme\")) {\r\n            model.jme = cleanValue(jsmeElement.jmeFile());\r\n        }\r\n        if (model.subscriptions.includes(\"smiles\")) {\r\n            model.smiles = cleanValue(jsmeElement.smiles());\r\n        }\r\n        if (model.subscriptions.includes(\"mol\")) {\r\n            model.mol = cleanValue(jsmeElement.molFile(false));\r\n        }\r\n        if (model.subscriptions.includes(\"mol3000\")) {\r\n            model.mol3000 = cleanValue(jsmeElement.molFile(true));\r\n        }\r\n        if (model.subscriptions.includes(\"sdf\")) {\r\n            model.sdf = cleanValue(readSDFValue(jsmeElement));\r\n        }\r\n        console.log(\"setOtherValues - end\");\r\n    }\r\n    // The view of the Bokeh extension/ HTML element\r\n    // Here you can define how to render the model as well as react to model changes or View events.\r\n    class JSMEEditorView extends html_box_1.HTMLBoxView {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.JSME = window.JSApplet.JSME;\r\n            this.valueChanging = true;\r\n        }\r\n        connect_signals() {\r\n            super.connect_signals();\r\n            this.connect(this.model.properties.value.change, () => {\r\n                console.log(\"value change\", this.model.value);\r\n                if (!this.valueChanging) {\r\n                    if (this.model.value === \"\") {\r\n                        this.jsmeElement.reset();\r\n                    }\r\n                    else {\r\n                        this.jsmeElement.readGenericMolecularInput(this.model.value);\r\n                    }\r\n                }\r\n            });\r\n            this.connect(this.model.properties.format.change, () => {\r\n                console.log(\"format change\", this.model.format);\r\n                setModelValue(this.model, this.jsmeElement);\r\n            });\r\n            this.connect(this.model.properties.subscriptions.change, () => {\r\n                console.log(\"subscriptions change\", this.model.subscriptions);\r\n                resetOtherModelValues(this.model, this.jsmeElement);\r\n            });\r\n            this.connect(this.model.properties.options.change, () => {\r\n                console.log(\"options change\", this.model.options);\r\n                this.setJSMEOptions();\r\n            });\r\n            this.connect(this.model.properties.guicolor.change, () => {\r\n                console.log(\"options change\", this.model.options);\r\n                this.setGUIColor();\r\n            });\r\n        }\r\n        render() {\r\n            console.log(\"render - start\");\r\n            super.render();\r\n            const id = \"jsme-\" + uuidv4();\r\n            const container = dom_1.div({ class: \"jsme-editor\", id: id });\r\n            this.el.appendChild(container);\r\n            this.jsmeElement = new this.JSME(id, this.getHeight(), this.getWidth(), {\r\n                \"options\": this.model.options.join(\",\"),\r\n                \"guicolor\": this.model.guicolor\r\n            });\r\n            this.jsmeElement.readGenericMolecularInput(this.model.value);\r\n            resetOtherModelValues(this.model, this.jsmeElement);\r\n            setModelValues(this.model, this.jsmeElement);\r\n            const this_ = this;\r\n            function showEvent(event) {\r\n                console.log(\"event\", event);\r\n                this_.valueChanging = true;\r\n                setModelValues(this_.model, this_.jsmeElement);\r\n                this_.valueChanging = false;\r\n            }\r\n            this.jsmeElement.setAfterStructureModifiedCallback(showEvent);\r\n            console.log(\"render - end\");\r\n        }\r\n        setGUIColor() {\r\n            console.log(\"setGUIColor\", this.model.guicolor);\r\n            this.jsmeElement.setUserInterfaceBackgroundColor(this.model.guicolor);\r\n        }\r\n        setJSMEOptions() {\r\n            const options = this.model.options.join(\",\");\r\n            console.log(\"setJSMEOptions\", options);\r\n            this.jsmeElement.options(options);\r\n        }\r\n        getHeight() {\r\n            if ((this.model.sizing_mode === \"stretch_height\" || this.model.sizing_mode === \"stretch_both\") && this.el.style.height) {\r\n                return this.el.style.height;\r\n            }\r\n            else if (this.model.height) {\r\n                return this.model.height.toString() + \"px\";\r\n            }\r\n            else {\r\n                return \"100px\";\r\n            }\r\n        }\r\n        getWidth() {\r\n            if ((this.model.sizing_mode === \"stretch_width\" || this.model.sizing_mode === \"stretch_both\") && this.el.style.width) {\r\n                return this.el.style.width;\r\n            }\r\n            else if (this.model.width) {\r\n                return this.model.width.toString() + \"px\";\r\n            }\r\n            else {\r\n                return \"100px\";\r\n            }\r\n        }\r\n        resizeJSMEElement() {\r\n            this.jsmeElement.setSize(this.getWidth(), this.getHeight());\r\n        }\r\n        after_layout() {\r\n            super.after_layout();\r\n            this.resizeJSMEElement();\r\n        }\r\n    }\r\n    exports.JSMEEditorView = JSMEEditorView;\r\n    JSMEEditorView.__name__ = \"JSMEEditorView\";\r\n    // The Bokeh .ts model corresponding to the Bokeh .py model\r\n    class JSMEEditor extends html_box_1.HTMLBox {\r\n        constructor(attrs) {\r\n            super(attrs);\r\n        }\r\n        static init_JSMEEditor() {\r\n            this.prototype.default_view = JSMEEditorView;\r\n            this.define(({ String, Array }) => ({\r\n                value: [String, \"\"],\r\n                format: [String, \"\"],\r\n                options: [Array(String), []],\r\n                jme: [String, \"\"],\r\n                smiles: [String, \"\"],\r\n                mol: [String, \"\"],\r\n                mol3000: [String, \"\"],\r\n                sdf: [String, \"\"],\r\n                subscriptions: [Array(String), []],\r\n                guicolor: [String, \"#FFFFFF\"],\r\n            }));\r\n        }\r\n    }\r\n    exports.JSMEEditor = JSMEEditor;\r\n    JSMEEditor.__name__ = \"JSMEEditor\";\r\n    JSMEEditor.__module__ = \"panel_chemistry.bokeh_extensions.jsme_editor\";\r\n    JSMEEditor.init_JSMEEditor();\r\n}\r\n","min_source":"function _(e,s,t,o,i){o();const l=e(\"@bokehjs/models/layouts/html_box\"),n=e(\"@bokehjs/core/dom\");const r=\"Not Subscribed\";function h(e){var s=e.getMultiSDFstack(),t=\"No multirecords SDF was pasted into the editor \";return s.length>0&&(t=s.join(\"$$$$\\n\")+\"$$$$\\n\"),t}function m(e,s){console.log(\"setValue - start\",e.value);var t=e.value;\"smiles\"===e.format?(console.log(\"getting smiles\"),t=s.smiles(),console.log(\"got smiles\")):t=\"mol\"===e.format?s.molFile(!1):\"mol3000\"===e.format?s.molFile(!0):\"sdf\"===e.format?h(s):s.jmeFile(),e.value!==t&&null!==t&&(console.log(\"setting value\",t),e.value=t),console.log(\"setValue - end\",e.value)}function c(e,s){console.log(\"setValues - start\"),m(e,s),function(e,s){console.log(\"setOtherValues - start\"),e.subscriptions.includes(\"jme\")&&(e.jme=u(s.jmeFile()));e.subscriptions.includes(\"smiles\")&&(e.smiles=u(s.smiles()));e.subscriptions.includes(\"mol\")&&(e.mol=u(s.molFile(!1)));e.subscriptions.includes(\"mol3000\")&&(e.mol3000=u(s.molFile(!0)));e.subscriptions.includes(\"sdf\")&&(e.sdf=u(h(s)));console.log(\"setOtherValues - end\")}(e,s),console.log(\"setValues - end\")}function d(e,s){e.subscriptions.includes(\"jme\")||(e.jme=r),e.subscriptions.includes(\"smiles\")||(e.smiles=r),e.subscriptions.includes(\"mol\")||(e.mol=r),e.subscriptions.includes(\"mol3000\")||(e.mol3000=r),e.subscriptions.includes(\"sdf\")||(e.sdf=r),c(e,s)}function u(e){return null===e?\"null\":e}class a extends l.HTMLBoxView{constructor(){super(...arguments),this.JSME=window.JSApplet.JSME,this.valueChanging=!0}connect_signals(){super.connect_signals(),this.connect(this.model.properties.value.change,(()=>{console.log(\"value change\",this.model.value),this.valueChanging||(\"\"===this.model.value?this.jsmeElement.reset():this.jsmeElement.readGenericMolecularInput(this.model.value))})),this.connect(this.model.properties.format.change,(()=>{console.log(\"format change\",this.model.format),m(this.model,this.jsmeElement)})),this.connect(this.model.properties.subscriptions.change,(()=>{console.log(\"subscriptions change\",this.model.subscriptions),d(this.model,this.jsmeElement)})),this.connect(this.model.properties.options.change,(()=>{console.log(\"options change\",this.model.options),this.setJSMEOptions()})),this.connect(this.model.properties.guicolor.change,(()=>{console.log(\"options change\",this.model.options),this.setGUIColor()}))}render(){console.log(\"render - start\"),super.render();const e=\"jsme-\"+\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,(function(e){var s=16*Math.random()|0;return(\"x\"==e?s:3&s|8).toString(16)})),s=n.div({class:\"jsme-editor\",id:e});this.el.appendChild(s),this.jsmeElement=new this.JSME(e,this.getHeight(),this.getWidth(),{options:this.model.options.join(\",\"),guicolor:this.model.guicolor}),this.jsmeElement.readGenericMolecularInput(this.model.value),d(this.model,this.jsmeElement),c(this.model,this.jsmeElement);const t=this;this.jsmeElement.setAfterStructureModifiedCallback((function(e){console.log(\"event\",e),t.valueChanging=!0,c(t.model,t.jsmeElement),t.valueChanging=!1})),console.log(\"render - end\")}setGUIColor(){console.log(\"setGUIColor\",this.model.guicolor),this.jsmeElement.setUserInterfaceBackgroundColor(this.model.guicolor)}setJSMEOptions(){const e=this.model.options.join(\",\");console.log(\"setJSMEOptions\",e),this.jsmeElement.options(e)}getHeight(){return\"stretch_height\"!==this.model.sizing_mode&&\"stretch_both\"!==this.model.sizing_mode||!this.el.style.height?this.model.height?this.model.height.toString()+\"px\":\"100px\":this.el.style.height}getWidth(){return\"stretch_width\"!==this.model.sizing_mode&&\"stretch_both\"!==this.model.sizing_mode||!this.el.style.width?this.model.width?this.model.width.toString()+\"px\":\"100px\":this.el.style.width}resizeJSMEElement(){this.jsmeElement.setSize(this.getWidth(),this.getHeight())}after_layout(){super.after_layout(),this.resizeJSMEElement()}}t.JSMEEditorView=a,a.__name__=\"JSMEEditorView\";class g extends l.HTMLBox{constructor(e){super(e)}static init_JSMEEditor(){this.prototype.default_view=a,this.define((({String:e,Array:s})=>({value:[e,\"\"],format:[e,\"\"],options:[s(e),[]],jme:[e,\"\"],smiles:[e,\"\"],mol:[e,\"\"],mol3000:[e,\"\"],sdf:[e,\"\"],subscriptions:[s(e),[]],guicolor:[e,\"#FFFFFF\"]})))}}t.JSMEEditor=g,g.__name__=\"JSMEEditor\",g.__module__=\"panel_chemistry.bokeh_extensions.jsme_editor\",g.init_JSMEEditor()}\n//# sourceMappingURL=jsme_editor.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"html_box_1\",\"dom_1\",\"notSubscribed\",\"readSDFValue\",\"jsmeElement\",\"data\",\"getMultiSDFstack\",\"output\",\"length\",\"join\",\"setModelValue\",\"model\",\"console\",\"log\",\"value\",\"format\",\"smiles\",\"molFile\",\"jmeFile\",\"setModelValues\",\"subscriptions\",\"includes\",\"jme\",\"cleanValue\",\"mol\",\"mol3000\",\"sdf\",\"setOtherModelValues\",\"resetOtherModelValues\",\"JSMEEditorView\",\"HTMLBoxView\",\"[object Object]\",\"super\",\"arguments\",\"this\",\"JSME\",\"window\",\"JSApplet\",\"valueChanging\",\"connect_signals\",\"connect\",\"properties\",\"change\",\"reset\",\"readGenericMolecularInput\",\"options\",\"setJSMEOptions\",\"guicolor\",\"setGUIColor\",\"render\",\"id\",\"replace\",\"c\",\"r\",\"Math\",\"random\",\"toString\",\"container\",\"div\",\"class\",\"el\",\"appendChild\",\"getHeight\",\"getWidth\",\"this_\",\"setAfterStructureModifiedCallback\",\"event\",\"setUserInterfaceBackgroundColor\",\"sizing_mode\",\"style\",\"height\",\"width\",\"setSize\",\"after_layout\",\"resizeJSMEElement\",\"__name__\",\"JSMEEditor\",\"HTMLBox\",\"attrs\",\"prototype\",\"default_view\",\"define\",\"String\",\"Array\",\"__module__\",\"init_JSMEEditor\"],\"mappings\":\"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\",\"file\":\"jsme_editor.min.js\"}"}}]}