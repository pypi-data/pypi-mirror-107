import torch
import numpy as np
import pytest
from dqc.system.mol import Mol
from dqc.hamilton.hcgto_pbc import HamiltonCGTO_PBC
from dqc.hamilton.intor.lattice import Lattice
from dqc.api.loadbasis import loadbasis
from dqc.utils.datastruct import DensityFitInfo, AtomCGTOBasis

import pyscf
import pyscf.pbc
from pyscf.pbc.dft import numint as pbc_numint

dtype = torch.float64
cdtype = torch.complex128

@pytest.fixture
def system1():
    poss = torch.tensor([[0.0, 0.0, 0.8], [0.0, 0.0, -0.8]], dtype=dtype)
    moldesc = ([1, 1], poss)
    # untruncated grid is required to pass the hamiltonian tests
    m = Mol(moldesc, basis="6-311++G**", dtype=dtype, grid=4)
    m.setup_grid()
    hamilton = m.get_hamiltonian()
    hamilton.build()
    hamilton.setup_grid(m.get_grid())
    return m

@pytest.fixture
def pbc_h1():
    # get the hamiltonian for pbc system
    # setup the environment
    pos = torch.tensor([0.0, 0.0, 0.0], dtype=dtype)
    atomz = 2
    atom = "He"
    bases = loadbasis("%d:3-21G" % atomz, dtype=dtype)
    atombases = [AtomCGTOBasis(atomz=atomz, bases=bases, pos=pos)]
    kpts = torch.tensor([[0.0, 0.0, 0.0], [0.1, 0.2, 0.15]], dtype=dtype)

    # setup the lattice
    a = torch.tensor([[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]], dtype=dtype) * 3
    latt = Lattice(a)

    # setup the auxbasis
    auxbases = loadbasis("%d:def2-sv(p)-jkfit" % atomz, dtype=dtype)
    atomauxbases = [AtomCGTOBasis(atomz=atomz, bases=auxbases, pos=pos)]
    df = DensityFitInfo(method="gdf", auxbases=atomauxbases)

    # build the hamiltonian
    h = HamiltonCGTO_PBC(atombases, latt=latt, df=df, kpts=kpts,
                         lattsum_opt={"precision": 1e-8})
    h.build()

    # pyscf system build
    mol = pyscf.pbc.gto.C(atom="%s 0 0 0" % atom, a=a.numpy(), basis="3-21G", unit="Bohr", spin=0)
    df = pyscf.pbc.df.GDF(mol, kpts=kpts.detach().numpy())
    df.auxbasis = "def2-svp-jkfit"
    df.build()

    return h, df

def test_cgto_ao2dm(system1):
    # test ao2dm with a simple case

    hamilton1 = system1.get_hamiltonian()
    nao = hamilton1.nao
    norb = nao // 2
    nbatch_orbw = (3,)
    nbatch_orb  = (2, 1)
    nbatch_res  = (2, 3)
    w = 2.0

    # prepare the orbital
    orb = torch.zeros((*nbatch_orb, nao, norb), dtype=dtype)
    orb_diag = orb.diagonal(dim1=-2, dim2=-1)
    orb_diag[:] = 1.0

    # prepare the orbital weights
    orb_weight = torch.ones((*nbatch_orbw, norb), dtype=dtype) * w  # (*BW, norb)

    # calculate the dm and the true dm
    dm = hamilton1.ao_orb2dm(orb, orb_weight)  # (*BOW, nao, nao)
    dm_true = torch.zeros((*nbatch_res, nao, nao), dtype=dtype)
    dm_true_diag = dm_true.diagonal(dim1=-2, dim2=-1)
    dm_true_diag[..., :norb] = w

    assert tuple(dm.shape) == (*nbatch_res, nao, nao)
    assert torch.allclose(dm, dm_true)

def test_cgto_dm2grid(system1):
    # test the function aodm2dens in hamilton cgto

    torch.manual_seed(123)
    hamilton1 = system1.get_hamiltonian()
    nao = hamilton1.nao
    nb = 4

    # prepare the density matrix
    # 0: zeros
    # 1: half of 2nd row (random symmetric)
    # 2: double the 1st row (random symmetric)
    # 3: eye
    dm = torch.rand((nb, nao, nao), dtype=dtype)
    dm = dm + dm.transpose(-2, -1)  # (nb, nao, nao)
    dm[0] = 0
    dm[2] = 2 * dm[1]
    dm[3] = 0
    dm3_diag = dm[3].diagonal(dim1=-2, dim2=-1)
    dm3_diag[:] = 1.0

    # prepare the grids
    # 0th row: middle point between two atoms
    # 1st row: position of the first atom
    # 2nd row: position of the second atom
    grids = torch.tensor([
        [0.0, 0.0, 0.0],
        [0.0, 0.0, 0.4],
        [0.0, 0.0, 0.8],
        [0.0, 0.0, -0.4],
        [0.0, 0.0, -0.8]
    ], dtype=dtype).unsqueeze(1)  # (ngrid, 1, ndim)
    ngrid = grids.shape[0]

    # # pyscf code to obtain the actual results
    # from pyscf import gto
    # from pyscf.dft import numint
    # mol = gto.M(atom="H 0 0 0.8; H 0 0 -0.8", basis="6-311++G**", unit="Bohr")
    # ao = numint.eval_ao(mol, grids[:, 0, :].numpy())
    # dens1 = numint.eval_rho(mol, ao, dm[1].numpy())
    # dens2 = numint.eval_rho(mol, ao, dm[2].numpy())
    # dens3 = numint.eval_rho(mol, ao, dm[3].numpy())
    # print(dens1)
    # print(dens2)
    # print(dens3)
    # raise RuntimeError

    dens = hamilton1.aodm2dens(dm, grids)  # (ngrid, nb)
    dens_true = torch.tensor([
        [0.0, 0.0, 0.0, 0.0, 0.0],
        [3.25841833, 4.37242451, 8.11849071, 4.0871612, 6.25558526],
        [6.51683666, 8.74484901, 16.23698143, 8.1743224, 12.51117051],
        [0.87780038, 1.05290457, 2.14278122, 1.05290457, 2.14278122],
    ], dtype=dens.dtype).transpose(-2, -1)
    assert list(dens.shape) == [ngrid, nb]
    assert torch.allclose(dens, dens_true)

def test_cgto_vext(system1):
    # test the external potential integration
    hamilton1 = system1.get_hamiltonian()
    nao = hamilton1.get_kinnucl().shape[-1]
    ngrid = system1.get_grid().get_rgrid().shape[-2]

    # uniform potential to see the integration of the basis
    w = 3.0
    vext = torch.ones((ngrid, ), dtype=dtype) * w
    a = hamilton1.get_vext(vext).fullmatrix()
    assert torch.allclose(torch.diagonal(a), torch.tensor(w, dtype=dtype),
                          rtol=4e-5)

def test_cgto_ao_params(system1):
    # check if dm2ao_orb_params and ao_orb_params2dm returns to the same dm
    m = system1
    h = m.get_hamiltonian()

    orb_weights = torch.tensor([2.0, 1.0], dtype=dtype)
    # TODO: test with orb_weights that are not ordered in a decreasing manner
    nao = h.nao
    norb = len(orb_weights)

    # generating density matrix that fulfills the requirements
    ao_params0 = torch.randn((nao, norb), dtype=dtype)
    dm = h.ao_orb_params2dm(ao_params0, orb_weights)

    # regenerate dm
    ao_params = h.dm2ao_orb_params(dm, norb=len(orb_weights))
    dm2, penalty = h.ao_orb_params2dm(ao_params, orb_weights, with_penalty=1.0)
    assert torch.allclose(dm, dm2)
    assert torch.allclose(penalty, torch.zeros_like(penalty))

def test_pbc_cgto_nuclattr(pbc_h1):
    import numpy as np
    # nuc = pbc_h1.get_nuc()
    # nuc[np.abs(nuc) < 1e-9] = 0
    h_dqc, df_scf = pbc_h1
    nuc_dqc = h_dqc.get_nuclattr().fullmatrix()
    nuc_scf = torch.as_tensor(df_scf.get_nuc(kpts=df_scf.kpts), dtype=nuc_dqc.dtype)
    print(nuc_dqc.shape)
    print(nuc_scf.shape)

    print(nuc_dqc)
    print(nuc_scf)
    assert torch.allclose(nuc_dqc, nuc_scf)

def test_pbc_cgto_elrep_df_j2(pbc_h1):
    # test to check if the 2-centre 2-electron integral matrix from dqc agrees with pyscf

    h_dqc, df_scf = pbc_h1
    j2c_dqc = h_dqc.df.j2c  # (4, nao, nao)

    # precomputed from pyscf (by putting "fuse(fuse(j2c[k]).T).T" in _make_j3c function)
    # https://github.com/pyscf/pyscf/blob/7be5e015b2b40181755c71d888449db936604660/pyscf/pbc/df/df.py#L209
    j2c0 = np.array([[5.54985442e+00,2.80485511e+00,1.05307731e+00,2.11094934e-01,-1.22124533e-15,2.08166817e-17,
      -1.21430643e-17,-1.22124533e-15,-2.77555756e-17,2.60208521e-18,-1.77635684e-15,-3.46944695e-17,
      5.20417043e-18,2.54926443e-18,1.42512792e-18,-1.27151171e-15,2.95549686e-21,1.69265400e-19,
      3.23388605e-19,1.63624147e-18,8.01455910e-16,-2.28384018e-19,2.81899226e-17],
      [2.80485511e+00,1.96765253e+00,9.01750924e-01,1.94122596e-01,-1.11022302e-15,-2.08166817e-17,
       -6.93889390e-18,-1.11022302e-15,-6.93889390e-17,-5.20417043e-18,-1.44328993e-15,-5.55111512e-17,
       6.07153217e-18,1.01941704e-18,-1.42112612e-18,5.49387203e-16,9.40049212e-20,-3.16427510e-17,
       3.11424265e-19,-3.96860939e-19,3.18642047e-16,-7.33645788e-19,-2.09693285e-17],
      [1.05307731e+00,9.01750924e-01,5.46676854e-01,1.40941163e-01,-1.22124533e-15,-6.24500451e-17,
       -1.47451495e-17,-1.11022302e-15,-6.24500451e-17,-1.12757026e-17,-1.55431223e-15,-6.93889390e-17,
       8.67361738e-19,-9.04208015e-19,-1.08713478e-18,-3.28188058e-16,6.11376202e-19,-3.20298451e-17,
       2.07408659e-18,-5.50760580e-19,1.76589540e-16,-4.87325050e-19,-2.13564226e-17],
      [2.11094934e-01,1.94122596e-01,1.40941163e-01,4.62452099e-02,-1.11022302e-15,-4.16333634e-17,
       -1.21430643e-17,-1.11022302e-15,-3.46944695e-17,-8.67361738e-19,-9.99200722e-16,-3.46944695e-17,
       -6.07153217e-18,5.20584749e-20,-5.33621726e-19,6.03566511e-16,6.22391548e-19,3.16698764e-19,
       2.11427434e-19,-1.02723959e-18,2.20165689e-16,6.57913819e-20,-2.88766658e-18],
      [-1.22124533e-15,-1.11022302e-15,-1.22124533e-15,-1.11022302e-15,2.59056125e+00,1.08420217e-18,
       -7.22245997e-19,8.82471717e-01,5.52943108e-18,9.75306877e-19,2.13805116e-01,-3.13063377e-18,
       -7.39188944e-19,-7.35224598e-19,-2.71050543e-20,-5.42101086e-19,-2.31239995e-19,-2.16840434e-19,
       5.04831637e-19,-1.55854062e-19,1.51788304e-18,-2.11758237e-19,1.73472348e-18],
      [2.08166817e-17,-2.08166817e-17,-6.24500451e-17,-4.16333634e-17,1.08420217e-18,2.59056125e+00,
       5.27769024e-19,4.22838847e-18,8.82471717e-01,-3.99468183e-19,-3.13063377e-18,2.13805116e-01,
       8.85803295e-19,1.62630326e-18,-3.01543729e-19,-1.62630326e-19,-2.71050543e-20,-1.01643954e-19,
       2.92734587e-18,-9.18183715e-19,-1.08420217e-19,-1.01643954e-19,1.28071382e-18],
      [-1.21430643e-17,-6.93889390e-18,-1.47451495e-17,-1.21430643e-17,-7.22245997e-19,5.27769024e-19,
       2.59056125e+00,1.46319785e-18,-4.53678292e-19,8.82471717e-01,-3.59718184e-19,9.94223512e-19,
       2.13805116e-01,-4.06575815e-20,-2.84603070e-19,1.00288701e-18,-3.03576608e-18,0.00000000e+00,
       -1.28749008e-19,5.28548559e-19,1.35525272e-19,-3.14418630e-18,-1.08420217e-19],
      [-1.22124533e-15,-1.11022302e-15,-1.11022302e-15,-1.11022302e-15,8.82471717e-01,4.22838847e-18,
       1.46319785e-18,4.56794208e-01,4.77048956e-18,1.58865758e-18,1.46725126e-01,-1.72117095e-18,
       -2.34258459e-19,-7.58941521e-19,-6.77626358e-21,-1.19262239e-18,-1.79570985e-19,-1.30104261e-18,
       6.64073831e-19,-1.35525272e-19,-1.08420217e-19,-2.31239995e-19,2.81892565e-18],
      [-2.77555756e-17,-6.93889390e-17,-6.24500451e-17,-3.46944695e-17,5.52943108e-18,8.82471717e-01,
       -4.53678292e-19,4.77048956e-18,4.56794208e-01,-4.05133543e-19,-4.20128342e-19,1.46725126e-01,
       2.29616632e-19,2.49366500e-18,2.91379334e-19,-3.79470760e-19,-2.71050543e-20,-7.86046575e-19,
       1.62630326e-18,-1.38913403e-19,-2.16840434e-19,-8.13151629e-20,9.75781955e-19],
      [2.60208521e-18,-5.20417043e-18,-1.12757026e-17,-8.67361738e-19,9.75306877e-19,-3.99468183e-19,
       8.82471717e-01,1.58865758e-18,-4.05133543e-19,4.56794208e-01,-1.74180248e-20,2.29616632e-19,
       1.46725126e-01,-1.21972744e-19,7.04731412e-19,-2.71050543e-20,-2.71050543e-18,-8.13151629e-20,
       -1.15196481e-19,-1.49077799e-19,-2.43945489e-19,-2.92734587e-18,-2.98155597e-19],
      [-1.77635684e-15,-1.44328993e-15,-1.55431223e-15,-9.99200722e-16,2.13805116e-01,-3.13063377e-18,
       -3.59718184e-19,1.46725126e-01,-4.20128342e-19,-1.74180248e-20,6.32467139e-02,-6.04442711e-18,
       -1.13560265e-18,-6.09863722e-19,3.38813179e-20,1.08420217e-19,-4.82808780e-20,1.51788304e-18,
       6.43745040e-19,-6.09863722e-20,1.19262239e-18,-6.35274710e-20,8.67361738e-19],
      [-3.46944695e-17,-5.55111512e-17,-6.93889390e-17,-3.46944695e-17,-3.13063377e-18,2.13805116e-01,
       9.94223512e-19,-1.72117095e-18,1.46725126e-01,2.29616632e-19,-6.04442711e-18,6.32467139e-02,
       1.02699713e-18,2.49366500e-18,4.03187683e-19,-5.42101086e-20,6.77626358e-21,-1.45689667e-18,
       2.92734587e-18,-2.03287907e-19,5.42101086e-20,-2.03287907e-20,4.26904605e-19],
      [5.20417043e-18,6.07153217e-18,8.67361738e-19,-6.07153217e-18,-7.39188944e-19,8.85803295e-19,
       2.13805116e-01,-2.34258459e-19,2.29616632e-19,1.46725126e-01,-1.13560265e-18,1.02699713e-18,
       6.32467139e-02,-2.71050543e-20,3.52365706e-19,-2.71050543e-20,-2.60208521e-18,0.00000000e+00,
       -4.06575815e-20,-1.76182853e-19,8.13151629e-20,-9.75781955e-19,-1.08420217e-19],
      [2.54926442e-18,1.01941704e-18,-9.04208015e-19,5.20584745e-20,-7.35224598e-19,1.62630326e-18,
       -4.06575815e-20,-7.58941521e-19,2.49366500e-18,-1.21972744e-19,-6.09863722e-19,2.49366500e-18,
       -2.71050543e-20,1.72529043e+00,-2.44817936e-20,8.35924372e-20,-1.07633149e-19,4.43633530e-20,
       3.32986345e-02,6.16930555e-20,5.58318423e-20,-4.31199627e-20,1.36046420e-20],
      [1.42588717e-18,-1.42036687e-18,-1.08637553e-18,-5.32862475e-19,-2.71050543e-20,-3.01543729e-19,
       -2.84603070e-19,-6.77626358e-21,2.91379334e-19,7.04731412e-19,3.38813179e-20,4.03187683e-19,
       3.52365706e-19,-2.44817936e-20,1.72529043e+00,8.88434022e-20,-4.62386726e-20,-3.12530750e-20,
       5.80915046e-20,3.32986345e-02,8.09353294e-20,-1.38726118e-19,-7.48761927e-20],
      [-1.27107803e-15,5.49820884e-16,-3.27754378e-16,6.04000191e-16,-5.42101086e-19,-1.62630326e-19,
       1.00288701e-18,-1.19262239e-18,-3.79470760e-19,-2.71050543e-20,1.08420217e-19,-5.42101086e-20,
       -2.71050543e-20,8.35924372e-20,8.95139487e-20,1.75087254e+00,-3.20911827e-21,-9.86243515e-19,
       3.54501120e-20,-9.99320678e-21,5.68006488e-02,-5.35165888e-20,-4.56993507e-19],
      [3.14434279e-21,9.41937672e-20,6.11565048e-19,6.22580394e-19,-2.31239995e-19,-2.71050543e-20,
       -3.03576608e-18,-1.79570985e-19,-2.71050543e-20,-2.71050543e-18,-4.82808780e-20,6.77626358e-21,
       -2.60208521e-18,-1.07629495e-19,-4.62452900e-20,-3.42087631e-21,1.72529043e+00,3.23176880e-20,
       -3.49873461e-20,-1.19674501e-19,2.28770694e-20,3.32986345e-02,2.73194492e-20],
      [1.69265348e-19,-3.16427511e-17,-3.20298451e-17,3.16698712e-19,-2.16840434e-19,-1.01643954e-19,
       0.00000000e+00,-1.30104261e-18,-7.86046575e-19,-8.13151629e-20,1.51788304e-18,-1.45689667e-18,
       0.00000000e+00,4.43633514e-20,-3.20239884e-20,-9.32033407e-19,3.23176880e-20,1.75087254e+00,
       -1.32882421e-20,7.45656782e-20,-2.15146968e-18,-6.16190103e-20,5.68006488e-02],
      [3.23388605e-19,3.11424264e-19,2.07408659e-18,2.11427434e-19,5.04831637e-19,2.92734587e-18,
       -1.28749008e-19,6.64073831e-19,1.62630326e-18,-1.15196481e-19,6.43745040e-19,2.92734587e-18,
       -4.06575815e-20,3.32986345e-02,5.80915046e-20,3.54501120e-20,-3.49910003e-20,-1.32882405e-20,
       3.68908793e-03,1.26055145e-19,-3.63561962e-20,7.22973495e-20,-6.77750193e-21],
      [1.63700073e-18,-3.96101687e-19,-5.50001328e-19,-1.02648033e-18,-1.55854062e-19,-9.18183715e-19,
       5.28548559e-19,-1.35525272e-19,-1.38913403e-19,-1.49077799e-19,-6.09863722e-20,-2.03287907e-19,
       -1.76182853e-19,6.16930555e-20,3.32986345e-02,-1.06637533e-20,-1.19667883e-19,7.53365915e-20,
       1.26055145e-19,3.68908793e-03,1.78505906e-20,-1.30840166e-19,1.50904523e-20],
      [8.01889590e-16,3.19075728e-16,1.77023221e-16,2.20599370e-16,1.51788304e-18,-1.08420217e-19,
       1.35525272e-19,-1.08420217e-19,-2.16840434e-19,-2.43945489e-19,1.19262239e-18,5.42101086e-20,
       8.13151629e-20,5.58318423e-20,8.16058759e-20,5.68006488e-02,2.30888275e-20,-2.20567979e-18,
       -3.63561962e-20,1.85211371e-20,1.64797945e-02,-8.16040170e-21,-1.16195095e-19],
      [-2.28195172e-19,-7.33456942e-19,-4.87136205e-19,6.59802278e-20,-2.11758237e-19,-1.01643954e-19,
       -3.14418630e-18,-2.31239995e-19,-8.13151629e-20,-2.92734587e-18,-6.35274710e-20,-2.03287907e-20,
       -9.75781955e-19,-4.31163085e-20,-1.38732736e-19,-5.37283468e-20,3.32986345e-02,-6.16190103e-20,
       7.23010037e-20,-1.30846783e-19,-8.37215973e-21,3.68908793e-03,-1.15601076e-20],
      [2.81899226e-17,-2.09693286e-17,-2.13564226e-17,-2.88766663e-18,1.73472348e-18,1.28071382e-18,
       -1.08420217e-19,2.81892565e-18,9.75781955e-19,-2.98155597e-19,8.67361738e-19,4.26904605e-19,
       -1.08420217e-19,1.36046403e-20,-7.56471060e-20,-4.02783398e-19,2.73194492e-20,5.68006488e-02,
       -6.77750354e-21,1.43195389e-20,-6.19849860e-20,-1.15601076e-20,1.64797945e-02]])
    j2c1 = np.array([[1.19755002e+01-2.22044605e-15j,9.22342463e+00-4.44089210e-16j,
      7.44368530e+00+4.44089210e-16j,6.49582425e+00-1.33226763e-15j,
      -1.66533454e-16+3.53164800e-01j,-1.38777878e-17+7.05222229e-01j,
      -6.93889390e-17+5.29405483e-01j,-1.94289029e-16+3.53164800e-01j,
      1.38777878e-17+7.05222229e-01j,-9.71445147e-17+5.29405483e-01j,
      -1.11022302e-16+3.53159956e-01j,2.77555756e-17+7.05212975e-01j,
      -6.93889390e-17+5.29398354e-01j,-3.10036320e-02-5.20417043e-18j,
      -4.64859628e-02-5.20417043e-18j,2.44798104e-03+8.67361738e-19j,
      -2.32671031e-02-0.00000000e+00j,2.54728812e-02-3.46944695e-18j,
      -3.10036270e-02+0.00000000e+00j,-4.64859554e-02-5.20417043e-18j,
      2.44677035e-03+0.00000000e+00j,-2.32670992e-02-1.73472348e-18j,
      2.54594013e-02+1.38777878e-17j],
     [9.22342463e+00-1.33226763e-15j,8.37914582e+00-4.44089210e-16j,
      7.28528269e+00+4.44089210e-16j,6.47178864e+00-8.88178420e-16j,
      -8.32667268e-17+3.53164800e-01j,0.00000000e+00+7.05222229e-01j,
      -6.93889390e-17+5.29405483e-01j,-2.49800181e-16+3.53164800e-01j,
      1.38777878e-17+7.05222229e-01j,-8.32667268e-17+5.29405483e-01j,
      -8.32667268e-17+3.53155620e-01j,-6.93889390e-17+7.05204690e-01j,
      -1.24900090e-16+5.29391972e-01j,-3.10036320e-02-3.46944695e-18j,
      -4.64859628e-02-4.33680869e-18j,2.44798104e-03+2.60208521e-18j,
      -2.32671031e-02+1.73472348e-18j,2.54728812e-02+6.93889390e-18j,
      -3.10036197e-02-5.20417043e-18j,-4.64859447e-02-4.33680869e-18j,
      2.44615156e-03-2.60208521e-18j,-2.32670936e-02+2.60208521e-18j,
      2.54525124e-02+1.38777878e-17j],
     [7.44368530e+00-2.22044605e-15j,7.28528269e+00-2.22044605e-15j,
      6.90224711e+00-4.44089210e-16j,6.39073880e+00-3.55271368e-15j,
      -8.32667268e-17+3.53164799e-01j,1.38777878e-17+7.05222229e-01j,
      -5.55111512e-17+5.29405482e-01j,-2.22044605e-16+3.53164699e-01j,
      5.55111512e-17+7.05222037e-01j,-1.11022302e-16+5.29405334e-01j,
      -1.38777878e-16+3.53105441e-01j,0.00000000e+00+7.05108808e-01j,
      -5.55111512e-17+5.29318113e-01j,-3.10036320e-02-3.46944695e-18j,
      -4.64859628e-02-7.80625564e-18j,2.44798100e-03+0.00000000e+00j,
      -2.32671031e-02-3.46944695e-18j,2.54728807e-02+0.00000000e+00j,
      -3.10034468e-02-1.21430643e-17j,-4.64856902e-02-8.67361738e-18j,
      2.44169271e-03-1.73472348e-18j,-2.32669604e-02-7.80625564e-18j,
      2.54028917e-02+1.73472348e-18j],
     [6.49582425e+00-4.44089210e-16j,6.47178864e+00-8.88178420e-16j,
      6.39073880e+00+1.77635684e-15j,6.19150777e+00-1.77635684e-15j,
      -8.32667268e-17+3.53027217e-01j,-1.38777878e-17+7.04959315e-01j,
      -5.55111512e-17+5.29202967e-01j,-1.94289029e-16+3.52841474e-01j,
      -2.77555756e-17+7.04604237e-01j,-1.11022302e-16+5.28929519e-01j,
      -2.77555756e-17+3.51823479e-01j,-1.38777878e-17+7.02655184e-01j,
      -2.77555756e-17+5.27429870e-01j,-3.10033937e-02-1.38777878e-17j,
      -4.64856120e-02-6.93889390e-18j,2.44093560e-03+8.67361738e-19j,
      -2.32669195e-02+2.60208521e-18j,2.53944698e-02-1.73472348e-18j,
      -3.09807698e-02-1.04083409e-17j,-4.64522720e-02-7.80625564e-18j,
      2.39535793e-03+8.67361738e-19j,-2.32495208e-02+2.60208521e-18j,
      2.48904928e-02+1.21430643e-17j],
     [-1.66533454e-16-3.53164800e-01j,-8.32667268e-17-3.53164800e-01j,
      -8.32667268e-17-3.53164799e-01j,-8.32667268e-17-3.53027217e-01j,
      2.61121398e+00+5.20417043e-18j,4.00255168e-02+8.67361738e-18j,
      3.00377009e-02+5.20417043e-18j,9.03124445e-01+1.04083409e-17j,
      4.00255168e-02+3.46944695e-18j,3.00377009e-02-1.21430643e-17j,
      2.34453080e-01+6.93889390e-18j,4.00255146e-02+3.46944695e-18j,
      3.00376992e-02-1.73472348e-18j,0.00000000e+00+4.07419782e-03j,
      6.50521303e-19+2.65984411e-03j,-6.50521303e-19+2.80967299e-03j,
      -4.33680869e-19+3.09230302e-03j,2.81892565e-18-6.49830246e-03j,
      8.67361738e-19+4.03384018e-03j,1.08420217e-19+2.65984410e-03j,
      2.16840434e-19+2.70880610e-03j,-1.73472348e-18+3.06121468e-03j,
      2.38524478e-18-6.32358797e-03j],
     [-1.38777878e-17-7.05222229e-01j,0.00000000e+00-7.05222229e-01j,
      1.38777878e-17-7.05222229e-01j,-1.38777878e-17-7.04959315e-01j,
      4.00255168e-02-8.67361738e-18j,2.67698467e+00+3.46944695e-18j,
      6.00131199e-02-8.67361738e-19j,4.00255168e-02-1.04083409e-17j,
      9.68895142e-01+5.20417043e-18j,6.00131199e-02-3.46944695e-18j,
      4.00255146e-02-1.04083409e-17j,3.00202668e-01+0.00000000e+00j,
      6.00131166e-02+1.73472348e-18j,1.51788304e-18+4.87613701e-03j,
      -3.79470760e-19+7.28464438e-03j,-8.67361738e-19+5.54282837e-03j,
      6.50521303e-19+2.65984411e-03j,-2.16840434e-19+7.27435127e-03j,
      -4.33680869e-19+4.85500188e-03j,2.71050543e-19+7.25353586e-03j,
      -9.75781955e-19+5.35009049e-03j,1.08420217e-19+2.65984410e-03j,
      1.51788304e-18+6.94053052e-03j],
     [-6.93889390e-17-5.29405483e-01j,-6.93889390e-17-5.29405483e-01j,
      -5.55111512e-17-5.29405482e-01j,-5.55111512e-17-5.29202967e-01j,
      3.00377009e-02-5.20417043e-18j,6.00131199e-02+8.67361738e-19j,
      2.63862547e+00+6.93889390e-18j,3.00377009e-02-5.20417043e-18j,
      6.00131199e-02-4.33680869e-18j,9.30535942e-01+5.20417043e-18j,
      3.00376992e-02-1.73472348e-18j,6.00131166e-02-4.33680869e-18j,
      2.61855664e-01+5.20417043e-18j,6.50521303e-19+2.65984411e-03j,
      4.33680869e-19+6.40030690e-03j,9.75781955e-19-8.98670007e-03j,
      -3.03576608e-18+3.24433091e-03j,-3.25260652e-19-2.09617068e-03j,
      5.42101086e-19+2.65984410e-03j,1.62630326e-19+6.35993820e-03j,
      -4.33680869e-19-8.68976341e-03j,-1.73472348e-18+3.22320371e-03j,
      -7.58941521e-19-2.09616059e-03j],
     [-1.94289029e-16-3.53164800e-01j,-2.49800181e-16-3.53164800e-01j,
      -2.22044605e-16-3.53164699e-01j,-1.94289029e-16-3.52841474e-01j,
      9.03124445e-01+3.46944695e-18j,4.00255168e-02+1.04083409e-17j,
      3.00377009e-02+5.20417043e-18j,4.77446873e-01+8.67361738e-18j,
      4.00255168e-02+0.00000000e+00j,3.00377009e-02-6.93889390e-18j,
      1.67360376e-01+5.20417043e-18j,4.00254708e-02+1.73472348e-18j,
      3.00376655e-02+5.20417043e-18j,-2.16840434e-19+4.07419714e-03j,
      4.33680869e-19+2.65984411e-03j,1.95156391e-18+2.80966882e-03j,
      -1.51788304e-18+3.09230250e-03j,4.33680869e-19-6.49829524e-03j,
      6.50521303e-19+3.96070451e-03j,0.00000000e+00+2.65984380e-03j,
      9.75781955e-19+2.56656029e-03j,-1.30104261e-18+3.00488141e-03j,
      -1.51788304e-18-6.07715194e-03j],
     [1.38777878e-17-7.05222229e-01j,1.38777878e-17-7.05222229e-01j,
      5.55111512e-17-7.05222037e-01j,-2.77555756e-17-7.04604237e-01j,
      4.00255168e-02-3.46944695e-18j,9.68895142e-01-1.73472348e-18j,
      6.00131199e-02+4.33680869e-18j,4.00255168e-02+0.00000000e+00j,
      5.43217329e-01+6.07153217e-18j,6.00131199e-02-1.73472348e-18j,
      4.00254708e-02-1.21430643e-17j,2.33045475e-01-2.60208521e-18j,
      6.00130521e-02-1.73472348e-18j,-1.30104261e-18+4.87613665e-03j,
      5.42101086e-20+7.28464386e-03j,-8.67361738e-19+5.54282039e-03j,
      4.33680869e-19+2.65984411e-03j,-2.16840434e-19+7.27433746e-03j,
      -2.16840434e-18+4.81662919e-03j,-3.25260652e-19+7.19705215e-03j,
      -8.67361738e-19+5.07820034e-03j,2.16840434e-19+2.65984380e-03j,
      6.50521303e-19+6.46968543e-03j],
     [-9.71445147e-17-5.29405483e-01j,-8.32667268e-17-5.29405483e-01j,
      -1.11022302e-16-5.29405334e-01j,-1.11022302e-16-5.28929519e-01j,
      3.00377009e-02+1.21430643e-17j,6.00131199e-02+3.46944695e-18j,
      9.30535942e-01+5.20417043e-18j,3.00377009e-02+6.93889390e-18j,
      6.00131199e-02+1.73472348e-18j,5.04858268e-01+6.93889390e-18j,
      3.00376655e-02+8.67361738e-18j,6.00130521e-02-8.67361738e-19j,
      1.94735732e-01+1.73472348e-18j,2.16840434e-19+2.65984411e-03j,
      -1.62630326e-19+6.40030622e-03j,4.33680869e-19-8.98668778e-03j,
      -1.40946282e-18+3.24433056e-03j,2.16840434e-19-2.09617068e-03j,
      2.16840434e-19+2.65984380e-03j,7.58941521e-19+6.28672008e-03j,
      -7.58941521e-19-8.27094194e-03j,-1.40946282e-18+3.18489007e-03j,
      -2.16840434e-19-2.09608537e-03j],
     [-1.11022302e-16-3.53159956e-01j,-8.32667268e-17-3.53155620e-01j,
      -1.38777878e-16-3.53105441e-01j,-2.77555756e-17-3.51823479e-01j,
      2.34453080e-01+6.93889390e-18j,4.00255146e-02+1.04083409e-17j,
      3.00376992e-02+1.73472348e-18j,1.67360376e-01+8.67361738e-18j,
      4.00254708e-02+1.21430643e-17j,3.00376655e-02-8.67361738e-18j,
      8.38027053e-02+1.73472348e-18j,4.00218890e-02+0.00000000e+00j,
      3.00349077e-02-1.73472348e-18j,2.16840434e-19+4.05733203e-03j,
      -5.42101086e-19+2.65984411e-03j,0.00000000e+00+2.76243139e-03j,
      -1.19262239e-18+3.07931077e-03j,3.46944695e-18-6.41647629e-03j,
      1.51788304e-18+3.56575623e-03j,5.42101086e-19+2.65979147e-03j,
      8.67361738e-19+1.97575599e-03j,-5.42101086e-19+2.70083200e-03j,
      -2.16840434e-19-5.05229713e-03j],
     [2.77555756e-17-7.05212975e-01j,-6.93889390e-17-7.05204690e-01j,
      0.00000000e+00-7.05108808e-01j,-1.38777878e-17-7.02655184e-01j,
      4.00255146e-02-3.46944695e-18j,3.00202668e-01+3.46944695e-18j,
      6.00131166e-02+4.33680869e-18j,4.00254708e-02-1.73472348e-18j,
      2.33045475e-01+6.07153217e-18j,6.00130521e-02+8.67361738e-19j,
      4.00218890e-02+0.00000000e+00j,1.48966595e-01+2.60208521e-18j,
      6.00077782e-02-2.60208521e-18j,-1.73472348e-18+4.86730769e-03j,
      2.16840434e-19+7.27164875e-03j,-6.50521303e-19+5.45256273e-03j,
      -5.42101086e-19+2.65984411e-03j,-2.16840434e-19+7.11800844e-03j,
      -2.60208521e-18+4.60746689e-03j,-2.71050543e-19+6.88904973e-03j,
      -9.21571847e-19+3.94668520e-03j,6.50521303e-19+2.65979147e-03j,
      1.73472348e-18+4.51201038e-03j],
     [-6.93889390e-17-5.29398354e-01j,-1.24900090e-16-5.29391972e-01j,
      -5.55111512e-17-5.29318113e-01j,-2.77555756e-17-5.27429870e-01j,
      3.00376992e-02+1.73472348e-18j,6.00131166e-02-1.73472348e-18j,
      2.61855664e-01+5.20417043e-18j,3.00376655e-02-5.20417043e-18j,
      6.00130521e-02+1.73472348e-18j,1.94735732e-01+8.67361738e-18j,
      3.00349077e-02+1.73472348e-18j,6.00077782e-02+2.60208521e-18j,
      1.10958083e-01+6.93889390e-18j,-5.42101086e-19+2.65984411e-03j,
      2.16840434e-19+6.38343926e-03j,4.33680869e-19-8.84763165e-03j,
      -2.16840434e-18+3.23550292e-03j,2.16840434e-19-2.09616899e-03j,
      4.33680869e-19+2.65979147e-03j,0.00000000e+00+5.88960514e-03j,
      -8.67361738e-19-6.52949796e-03j,-3.25260652e-19+2.97727952e-03j,
      -1.08420217e-19-2.09410887e-03j],
     [-3.10036320e-02+5.20417043e-18j,-3.10036320e-02+3.46944695e-18j,
      -3.10036320e-02+3.46944695e-18j,-3.10033937e-02+1.38777878e-17j,
      0.00000000e+00-4.07419782e-03j,1.51788304e-18-4.87613701e-03j,
      6.50521303e-19-2.65984411e-03j,-2.16840434e-19-4.07419714e-03j,
      -1.30104261e-18-4.87613665e-03j,2.16840434e-19-2.65984411e-03j,
      2.16840434e-19-4.05733203e-03j,-1.73472348e-18-4.86730769e-03j,
      -5.42101086e-19-2.65984411e-03j,1.72629915e+00-6.77626358e-20j,
      2.75850019e-04+4.06575815e-20j,1.94029086e-04+7.45388994e-20j,
      1.82348567e-04-5.42101086e-20j,-1.14629405e-04+2.16840434e-19j,
      3.42619432e-02-1.21972744e-19j,2.75840697e-04+0.00000000e+00j,
      1.93924244e-04-2.03287907e-20j,1.82330773e-04-8.13151629e-20j,
      -1.14629405e-04-2.71050543e-20j],
     [-4.64859628e-02+5.20417043e-18j,-4.64859628e-02+4.33680869e-18j,
      -4.64859628e-02+7.80625564e-18j,-4.64856120e-02+6.93889390e-18j,
      6.50521303e-19-2.65984411e-03j,-3.79470760e-19-7.28464438e-03j,
      4.33680869e-19-6.40030690e-03j,4.33680869e-19-2.65984411e-03j,
      5.42101086e-20-7.28464386e-03j,-1.62630326e-19-6.40030622e-03j,
      -5.42101086e-19-2.65984411e-03j,2.16840434e-19-7.27164875e-03j,
      2.16840434e-19-6.38343926e-03j,2.75850019e-04-4.06575815e-20j,
      1.72675996e+00+2.47333621e-19j,-1.65777819e-04-1.69406589e-20j,
      2.24045490e-04+3.38813179e-20j,8.66366989e-05+4.06575815e-20j,
      2.75840697e-04-1.21972744e-19j,3.47104002e-02+2.54109884e-19j,
      -1.65700662e-04+1.35525272e-20j,2.24033396e-04-1.08420217e-19j,
      8.65030595e-05+1.35525272e-20j],
     [2.44798104e-03-8.67361738e-19j,2.44798104e-03-2.60208521e-18j,
      2.44798100e-03+0.00000000e+00j,2.44093560e-03-8.67361738e-19j,
      -6.50521303e-19-2.80967299e-03j,-8.67361738e-19-5.54282837e-03j,
      9.75781955e-19+8.98670007e-03j,1.95156391e-18-2.80966882e-03j,
      -8.67361738e-19-5.54282039e-03j,4.33680869e-19+8.98668778e-03j,
      0.00000000e+00-2.76243139e-03j,-6.50521303e-19-5.45256273e-03j,
      4.33680869e-19+8.84763165e-03j,1.94029086e-04-7.45388994e-20j,
      -1.65777819e-04+1.69406589e-20j,1.74931542e+00+1.96511644e-19j,
      -8.84013556e-05-1.82959117e-19j,-3.73652454e-04+4.13352078e-19j,
      1.93924244e-04+2.71050543e-20j,-1.65700662e-04+1.35525272e-20j,
      5.54151900e-02+2.71050543e-19j,-8.83609733e-05-6.09863722e-20j,
      -3.12565655e-04+4.74338450e-20j],
     [-2.32671031e-02+0.00000000e+00j,-2.32671031e-02-1.73472348e-18j,
      -2.32671031e-02+3.46944695e-18j,-2.32669195e-02-2.60208521e-18j,
      -4.33680869e-19-3.09230302e-03j,6.50521303e-19-2.65984411e-03j,
      -3.03576608e-18-3.24433091e-03j,-1.51788304e-18-3.09230250e-03j,
      4.33680869e-19-2.65984411e-03j,-1.40946282e-18-3.24433056e-03j,
      -1.19262239e-18-3.07931077e-03j,-5.42101086e-19-2.65984411e-03j,
      -2.16840434e-18-3.23550292e-03j,1.82348567e-04+5.42101086e-20j,
      2.24045490e-04-3.38813179e-20j,-8.84013556e-05+1.82959117e-19j,
      1.72589705e+00+8.40256684e-19j,-2.24811472e-04-1.49077799e-19j,
      1.82330773e-04-4.06575815e-20j,2.24033396e-04-1.08420217e-19j,
      -8.83609733e-05-1.35525272e-20j,3.38767482e-02-3.93023288e-19j,
      -2.24741528e-04+1.62630326e-19j],
     [2.54728812e-02+3.46944695e-18j,2.54728812e-02-6.93889390e-18j,
      2.54728807e-02+0.00000000e+00j,2.53944698e-02+1.73472348e-18j,
      2.81892565e-18+6.49830246e-03j,-2.16840434e-19-7.27435127e-03j,
      -3.25260652e-19+2.09617068e-03j,4.33680869e-19+6.49829524e-03j,
      -2.16840434e-19-7.27433746e-03j,2.16840434e-19+2.09617068e-03j,
      3.46944695e-18+6.41647629e-03j,-2.16840434e-19-7.11800844e-03j,
      2.16840434e-19+2.09616899e-03j,-1.14629405e-04-2.16840434e-19j,
      8.66366989e-05-4.06575815e-20j,-3.73652454e-04-4.13352078e-19j,
      -2.24811472e-04+1.49077799e-19j,1.74934478e+00+8.13151629e-20j,
      -1.14629405e-04-1.89735380e-19j,8.65030595e-05+4.06575815e-20j,
      -3.12565655e-04+4.06575815e-20j,-2.24741528e-04+1.21972744e-19j,
      5.54555201e-02+6.77626358e-20j],
     [-3.10036270e-02+0.00000000e+00j,-3.10036197e-02+5.20417043e-18j,
      -3.10034468e-02+1.21430643e-17j,-3.09807698e-02+1.04083409e-17j,
      8.67361738e-19-4.03384018e-03j,-4.33680869e-19-4.85500188e-03j,
      5.42101086e-19-2.65984410e-03j,6.50521303e-19-3.96070451e-03j,
      -2.16840434e-18-4.81662919e-03j,2.16840434e-19-2.65984380e-03j,
      1.51788304e-18-3.56575623e-03j,-2.60208521e-18-4.60746689e-03j,
      4.33680869e-19-2.65979147e-03j,3.42619432e-02+1.21972744e-19j,
      2.75840697e-04+1.21972744e-19j,1.93924244e-04-2.71050543e-20j,
      1.82330773e-04+4.06575815e-20j,-1.14629405e-04+1.89735380e-19j,
      4.31387349e-03+2.98155597e-19j,2.73666211e-04+1.08420217e-19j,
      1.79171426e-04-5.42101086e-20j,1.78250593e-04-4.06575815e-20j,
      -1.14629393e-04+1.08420217e-19j],
     [-4.64859554e-02+5.20417043e-18j,-4.64859447e-02+4.33680869e-18j,
      -4.64856902e-02+8.67361738e-18j,-4.64522720e-02+7.80625564e-18j,
      1.08420217e-19-2.65984410e-03j,2.71050543e-19-7.25353586e-03j,
      1.62630326e-19-6.35993820e-03j,0.00000000e+00-2.65984380e-03j,
      -3.25260652e-19-7.19705215e-03j,7.58941521e-19-6.28672008e-03j,
      5.42101086e-19-2.65979147e-03j,-2.71050543e-19-6.88904973e-03j,
      0.00000000e+00-5.88960514e-03j,2.75840697e-04+0.00000000e+00j,
      3.47104002e-02-3.35425047e-19j,-1.65700662e-04-1.35525272e-20j,
      2.24033396e-04+1.08420217e-19j,8.65030595e-05-4.06575815e-20j,
      2.73666211e-04-1.08420217e-19j,4.66480764e-03-4.06575815e-20j,
      -1.54845679e-04-1.01643954e-20j,2.21239892e-04-6.09863722e-20j,
      6.77016980e-05-1.35525272e-20j],
     [2.44677035e-03+0.00000000e+00j,2.44615156e-03+2.60208521e-18j,
      2.44169271e-03+1.73472348e-18j,2.39535793e-03-8.67361738e-19j,
      2.16840434e-19-2.70880610e-03j,-9.75781955e-19-5.35009049e-03j,
      -4.33680869e-19+8.68976341e-03j,9.75781955e-19-2.56656029e-03j,
      -8.67361738e-19-5.07820034e-03j,-7.58941521e-19+8.27094194e-03j,
      8.67361738e-19-1.97575599e-03j,-9.21571847e-19-3.94668520e-03j,
      -8.67361738e-19+6.52949796e-03j,1.93924244e-04+2.03287907e-20j,
      -1.65700662e-04-1.35525272e-20j,5.54151900e-02-2.57498016e-19j,
      -8.83609733e-05+1.35525272e-20j,-3.12565655e-04-4.06575815e-20j,
      1.79171426e-04+5.42101086e-20j,-1.54845679e-04+1.01643954e-20j,
      1.58731742e-02+9.48676901e-20j,-8.26771476e-05-3.38813179e-20j,
      -5.54424142e-05-3.38813179e-20j],
     [-2.32670992e-02+1.73472348e-18j,-2.32670936e-02-2.60208521e-18j,
      -2.32669604e-02+7.80625564e-18j,-2.32495208e-02-2.60208521e-18j,
      -1.73472348e-18-3.06121468e-03j,1.08420217e-19-2.65984410e-03j,
      -1.73472348e-18-3.22320371e-03j,-1.30104261e-18-3.00488141e-03j,
      2.16840434e-19-2.65984380e-03j,-1.40946282e-18-3.18489007e-03j,
      -5.42101086e-19-2.70083200e-03j,6.50521303e-19-2.65979147e-03j,
      -3.25260652e-19-2.97727952e-03j,1.82330773e-04+8.13151629e-20j,
      2.24033396e-04+1.08420217e-19j,-8.83609733e-05+6.09863722e-20j,
      3.38767482e-02+3.93023288e-19j,-2.24741528e-04-1.21972744e-19j,
      1.78250593e-04+4.06575815e-20j,2.21239892e-04+6.09863722e-20j,
      -8.26771476e-05+3.38813179e-20j,4.06044616e-03+4.87890978e-19j,
      -2.14896845e-04+1.49077799e-19j],
     [2.54594013e-02-1.38777878e-17j,2.54525124e-02-1.38777878e-17j,
      2.54028917e-02-1.73472348e-18j,2.48904928e-02-1.21430643e-17j,
      2.38524478e-18+6.32358797e-03j,1.51788304e-18-6.94053052e-03j,
      -7.58941521e-19+2.09616059e-03j,-1.51788304e-18+6.07715194e-03j,
      6.50521303e-19-6.46968543e-03j,-2.16840434e-19+2.09608537e-03j,
      -2.16840434e-19+5.05229713e-03j,1.73472348e-18-4.51201038e-03j,
      -1.08420217e-19+2.09410887e-03j,-1.14629405e-04+2.71050543e-20j,
      8.65030595e-05-1.35525272e-20j,-3.12565655e-04-4.74338450e-20j,
      -2.24741528e-04-1.62630326e-19j,5.54555201e-02-6.77626358e-20j,
      -1.14629393e-04-1.08420217e-19j,6.77016980e-05+1.35525272e-20j,
      -5.54424142e-05+3.38813179e-20j,-2.14896845e-04-1.49077799e-19j,
      1.59593215e-02+4.06575815e-20j]])

    j2c0 = torch.as_tensor(j2c0, dtype=j2c_dqc.dtype)
    j2c1 = torch.as_tensor(j2c1, dtype=j2c_dqc.dtype)

    assert torch.allclose(j2c_dqc[0], j2c0, rtol=1e-5, atol=2e-5)
    # use the 2nd index because of different arrangement in putting kpts_ij together
    assert torch.allclose(j2c_dqc[2], j2c1, rtol=1e-5, atol=1e-4)
    assert torch.allclose(j2c_dqc[1], j2c_dqc[2].conj(), rtol=1e-5, atol=1e-4)
    assert torch.allclose(j2c_dqc[0], j2c_dqc[3])

def test_pbc_cgto_elrep_df_j3(pbc_h1):
    # test to check if the 3-centre 2-electron integral matrix from dqc agrees with pyscf

    h_dqc, df_scf = pbc_h1
    j3c_dqc = h_dqc.df.j3c  # (nkpts_ij, nao, nao, nxao)

    # precomputed from pyscf by putting "print(v)" above this line:
    # https://github.com/pyscf/pyscf/blob/7be5e015b2b40181755c71d888449db936604660/pyscf/pbc/df/df.py#L346
    # this is not a complete comparison because pyscf only saves part of j3c
    # for efficiency
    j3c0 = np.array([[ 1.66810590e+00,  6.89866348e-01,  6.89866348e-01,  2.00791153e-01],
                     [ 1.28441992e+00,  5.86052299e-01,  5.86052299e-01,  1.86207403e-01],
                     [ 6.83901190e-01,  3.62961078e-01,  3.62961078e-01,  1.39153727e-01],
                     [ 1.62736227e-01,  9.77778065e-02,  9.77778065e-02,  4.86326521e-02],
                     [ 1.24900090e-16,  9.36751833e-17,  9.36751833e-17,  1.24900090e-16],
                     [-8.32667268e-17, -8.67358426e-17, -8.67358426e-17,  1.00613962e-16],
                     [ 2.60208521e-18, -3.38272305e-17, -3.38272305e-17, -1.64798730e-17],
                     [-1.52655666e-16,  9.36751833e-17,  9.36751833e-17,  3.60822483e-16],
                     [-7.97972799e-17, -1.08419886e-16, -1.08419886e-16, -9.71445147e-17],
                     [ 6.07153217e-18, -3.72966775e-17, -3.72966775e-17,  1.30104261e-17],
                     [-1.24900090e-16,  3.19189235e-16,  3.19189235e-16,  1.38777878e-16],
                     [-2.42861287e-17, -1.49185888e-16, -1.49185888e-16, -1.28369537e-16],
                     [ 1.82145965e-17, -3.38272305e-17, -3.38272305e-17, -1.82145965e-17],
                     [ 1.10037521e-18,  5.37969154e-18,  5.37969154e-18, -7.80590662e-18],
                     [ 7.34738216e-19, -1.87648466e-18, -1.87648466e-18, -1.30490877e-18],
                     [-1.85181731e-16,  5.30500123e-16,  5.30500123e-16, -1.09439367e-15],
                     [ 3.36318071e-18,  1.48558536e-19,  1.48558536e-19,  4.33627071e-18],
                     [-9.10729825e-18,  2.16840434e-18,  2.16840434e-18, -4.98732999e-18],
                     [-6.34348268e-19,  7.00599480e-18,  7.00599480e-18,  5.20451945e-18],
                     [ 1.41236457e-18, -5.21231940e-19, -5.21231940e-19, -5.85855790e-18],
                     [-1.34874750e-16,  1.84314369e-18,  1.84314369e-18,  1.30754782e-16],
                     [ 2.44160887e-18,  1.75663590e-19,  1.75663590e-19,  8.66823760e-19],
                     [-5.63785130e-18,  2.81892565e-18,  2.81892565e-18,  2.10335221e-17]])
    j3c1 = np.array([[ 1.66810596e+00-9.71378291e-17j,  6.74433626e-01-1.21436591e-16j,
                       6.74433626e-01+1.21436591e-16j, 2.02308814e-01+8.11901353e-16j],
                     [ 1.28441954e+00-1.38712940e-17j,  5.72613988e-01+8.66320236e-17j,
                       5.72613988e-01-8.66320236e-17j, 1.87518931e-01-3.26273652e-16j],
                     [ 6.83899449e-01-1.11016567e-16j,  3.54172715e-01+3.08288584e-16j,
                       3.54172715e-01-3.08288584e-16j, 1.39878914e-01+9.21951162e-16j],
                     [ 1.62734222e-01+6.93918042e-17j,  9.52590393e-02-1.09514826e-16j,
                       9.52590393e-02+1.09514826e-16j, 4.86812012e-02-1.30143444e-15j],
                     [ 3.01841885e-16+3.03576608e-17j,  1.38747171e-16+8.41971466e-03j,
                       1.38747171e-16-8.41971466e-03j, 3.67761364e-16+2.08166817e-17j],
                     [ 2.60208535e-18-5.18140642e-18j, -2.60381637e-17+1.62521710e-02j,
                      -2.60381637e-17-1.62521710e-02j, -4.68375468e-17+1.35468100e-16j],
                     [ 1.59377721e-17-7.80790339e-18j,  1.46361548e-17+1.24459725e-02j,
                       1.46361548e-17-1.24459725e-02j, 6.50508312e-19+5.39654066e-17j],
                     [ 2.11636264e-16+9.54097912e-18j, -2.77862827e-17+5.06226262e-03j,
                      -2.77862827e-17-5.06226262e-03j, 1.38777748e-17+6.59194921e-17j],
                     [ 2.42861288e-17-4.18274398e-17j,  7.78894412e-18+9.77830670e-03j,
                       7.78894412e-18-9.77830670e-03j, -2.08166830e-16+1.31700953e-17j],
                     [ 1.97866898e-17+2.99223322e-17j, -5.63842586e-18+7.48521305e-03j,
                      -5.63842586e-18-7.48521305e-03j, -9.97467298e-18-6.22610663e-17j],
                     [ 2.42861287e-16+5.63785130e-17j, -1.07583563e-16+1.87625299e-03j,
                      -1.07583563e-16-1.87625299e-03j, 1.31838971e-16+3.29597460e-17j],
                     [ 1.04083410e-17+2.49594140e-17j, -1.82319080e-17+3.62758542e-03j,
                      -1.82319080e-17-3.62758542e-03j, -2.13371001e-16+1.35034420e-16j],
                     [-9.16150822e-18+1.64782253e-17j, -9.27050314e-18+2.77537560e-03j,
                      -9.27050314e-18-2.77537560e-03j, 6.65700004e-17+4.18223423e-17j],
                     [-1.95709022e-15+3.46944682e-18j, -1.57014120e-04+5.14957705e-19j,
                      -1.57014120e-04-5.14957705e-19j, 6.30192513e-18-5.52941891e-18j],
                     [-2.88994054e-15+9.69005565e-19j, -2.32075808e-04+3.25251529e-18j,
                      -2.32075808e-04-3.25251529e-18j, 1.23327997e-17+2.04644377e-18j],
                     [ 4.78516433e-07-2.83242499e-18j,  7.94666385e-05+3.71740690e-18j,
                       7.94666385e-05-3.71740690e-18j, 3.26392090e-04+3.40861486e-18j],
                     [-1.51364709e-15-3.68628751e-18j, -1.20257508e-04+2.44030695e-19j,
                       -1.20257508e-04-2.44030695e-19j, 8.20605519e-18-2.22260229e-18j],
                     [ 5.32800168e-06+1.40945932e-18j,  8.57699707e-04-2.18187580e-19j,
                       8.57699707e-04+2.18187580e-19j, 3.35631641e-03+1.66256968e-17j],
                     [-5.05206978e-17+7.86046447e-19j, -1.22055514e-05+2.05994580e-18j,
                      -1.22055514e-05-2.05994580e-18j, -9.52742659e-18-3.63206511e-18j],
                     [-7.78589128e-17+8.60585347e-19j, -1.80545032e-05+1.72785599e-18j,
                      -1.80545032e-05-1.72785599e-18j, 1.21972744e-18-7.08795954e-18j],
                     [ 1.73011852e-07-1.47717227e-18j,  1.21230893e-05+3.35148867e-18j,
                       1.21230893e-05-3.35148867e-18j, 1.18846079e-04+1.02390886e-17j],
                     [-3.91592447e-17-1.70761855e-18j, -9.33823323e-06+1.38244298e-18j,
                      -9.33823323e-06-1.38244298e-18j, 1.32475953e-17-9.05307597e-18j],
                     [ 1.92632762e-06+5.69202633e-19j,  1.30104175e-04+5.44676877e-18j,
                       1.30104175e-04-5.44676877e-18j, 1.20169149e-03-1.14166632e-18j]])
    j3c2 = np.array([[ 8.07456267e+00+2.10942379e-15j,  5.86141389e+00-8.91013507e-16j,
                       5.73287899e+00-2.19281333e-16j,  1.55975833e+01-5.33497485e-15j],
                     [ 7.68379627e+00+2.22044609e-15j,  5.75185981e+00-1.11305811e-15j,
                       5.62549732e+00+3.35830179e-16j,  1.55658904e+01-4.00270722e-15j],
                     [ 7.05529963e+00+1.33226767e-15j,  5.50608739e+00-1.33510272e-15j,
                       5.38507762e+00+1.00196399e-15j,  1.54514230e+01-2.22635038e-15j],
                     [ 6.42825628e+00+2.88657991e-15j,  5.15518529e+00-7.79991204e-16j,
                       5.04300460e+00-2.19281333e-16j,  1.51081741e+01-1.78226117e-15j],
                     [ 8.84709023e-17-3.53378684e-01j, -2.35842991e-17-2.86488208e-01j,
                       1.04940966e-17-2.88716839e-01j, -3.85203066e-17-8.79505310e-01j],
                     [-4.25007501e-17-7.05648823e-01j,  3.82374809e-17-5.72076828e-01j,
                      -1.09171419e-17-5.76097550e-01j,  3.57534743e-17-1.75668110e+00j],
                     [ 3.38270467e-17-5.29725944e-01j, -2.84707143e-18-4.29454706e-01j,
                      -5.48373359e-17-4.32661439e-01j,  9.31821586e-17-1.31854220e+00j],
                     [ 8.67361788e-17-3.53378053e-01j, -5.13398747e-17-2.86486603e-01j,
                      -1.72614790e-17-2.85357811e-01j,  3.78075263e-17-8.76903559e-01j],
                     [-2.94903241e-17-7.05647617e-01j,  1.09155862e-17-5.72073762e-01j,
                       3.39432677e-18-5.69620651e-01j, -7.87382751e-17-1.75166089e+00j],
                     [-8.67367850e-18-5.29725015e-01j,  1.10307164e-17-4.29452344e-01j,
                      -4.09595481e-17-4.27698352e-01j, -5.69707958e-18-1.31469689e+00j],
                     [ 2.42861336e-17-3.53342557e-01j, -3.91968104e-17-2.86377949e-01j,
                       8.75937311e-18-2.82065699e-01j,  2.45974343e-16-8.70066121e-01j],
                     [-4.33681119e-17-7.05579792e-01j,  1.69871183e-17-5.71866129e-01j,
                      -3.97824800e-18-5.63265061e-01j, -7.70035516e-17-1.73841918e+00j],
                     [ 3.29596849e-17-5.29672768e-01j, -2.45311149e-17-4.29292410e-01j,
                      -3.48880159e-17-4.22831654e-01j,  6.54265829e-17-1.30457581e+00j],
                     [-3.10218608e-02-1.84314202e-18j, -2.51488285e-02+6.35999331e-18j,
                      -2.48424649e-02-4.77989071e-18j, -7.75092091e-02+1.47777276e-17j],
                     [-4.65132942e-02-2.16839821e-18j, -3.77074340e-02-3.14664898e-19j,
                      -3.72453970e-02-2.98677884e-18j, -1.16217028e-01-4.21190493e-18j],
                     [ 2.44956879e-03-7.69786932e-18j,  1.98605642e-03-8.69279500e-19j,
                       1.99662973e-03+5.20562115e-18j,  5.95970242e-03+2.39513457e-18j],
                     [-2.32807834e-02+4.77726834e-18j, -1.88732873e-02+1.91627969e-18j,
                      -1.86453023e-02-2.80923805e-19j, -5.81664471e-02-2.13208316e-18j],
                     [ 2.54895007e-02-9.10730814e-18j,  2.06664660e-02+1.92307850e-18j,
                       2.07810321e-02-1.10347395e-18j,  6.18966091e-02-5.25246420e-18j],
                     [-3.10217773e-02-4.33680702e-18j, -2.51483184e-02+1.69792396e-18j,
                      -2.46904559e-02-1.25623365e-18j, -7.69903120e-02+1.80303341e-17j],
                     [-4.65131712e-02-2.62918413e-18j, -3.77066832e-02+2.28742032e-18j,
                      -3.70207292e-02-1.47567206e-18j, -1.15448887e-01-6.61142814e-19j],
                     [ 2.44532214e-03-6.50555195e-19j,  1.97730220e-03+1.08228441e-18j,
                       1.92522353e-03+5.85614245e-18j,  5.78663217e-03-6.06164237e-18j],
                     [-2.32807190e-02+2.03313066e-20j, -1.88728944e-02+1.44871750e-18j,
                      -1.85288709e-02-1.34818532e-18j, -5.77698692e-02+4.40023493e-18j],
                     [ 2.54422286e-02-2.81893554e-18j,  2.05690710e-02+6.04304676e-18j,
                       2.00094580e-02-2.36112211e-19j,  6.00450206e-02-2.78038694e-17j]])

    j3c0 = torch.as_tensor(j3c0, dtype=j3c_dqc.dtype)
    j3c1 = torch.as_tensor(j3c1, dtype=j3c_dqc.dtype)
    j3c2 = torch.as_tensor(j3c2, dtype=j3c_dqc.dtype)

    j3c0_dqc = j3c_dqc[0, :, :, :].reshape(-1, j3c_dqc.shape[-1]).transpose(-2, -1)
    j3c1_dqc = j3c_dqc[3, :, :, :].reshape(-1, j3c_dqc.shape[-1]).transpose(-2, -1)
    j3c2_dqc = j3c_dqc[2, :, :, :].reshape(-1, j3c_dqc.shape[-1]).transpose(-2, -1)

    assert torch.allclose(j3c0_dqc, j3c0, rtol=1e-5, atol=2e-5)
    assert torch.allclose(j3c1_dqc, j3c1, rtol=1e-5, atol=2e-5)
    assert torch.allclose(j3c2_dqc, j3c2, rtol=1e-5, atol=2e-5)
    assert torch.allclose(j3c_dqc[1], j3c_dqc[2].transpose(0, 1).conj(), rtol=1e-5, atol=2e-5)

def test_pbc_cgto_elrep_df(pbc_h1):
    # test to check if the electron repulsion matrix from dqc agrees with pyscf
    h_dqc, df_scf = pbc_h1
    nkpts = h_dqc.kpts.shape[0]
    nao = h_dqc.nao

    # generate random hermitian density matrix
    dm = torch.rand((nkpts, nao, nao), dtype=cdtype)
    dm = dm + dm.conj().transpose(-2, -1)

    elrep_dqc = h_dqc.get_elrep(dm).fullmatrix()
    elrep_scf = df_scf.get_jk(dm)[0]
    assert torch.allclose(elrep_dqc, torch.as_tensor(elrep_scf, dtype=elrep_dqc.dtype), rtol=1e-5, atol=2e-5)

def test_pbc_cgto_eval_dm(pbc_h1):
    torch.manual_seed(123)
    h_dqc, df_scf = pbc_h1
    nkpts = h_dqc.kpts.shape[0]
    nao = h_dqc.nao

    # generate random hermitian density matrix
    dm = torch.rand((nkpts, nao, nao), dtype=cdtype)
    dm = dm + dm.conj().transpose(-2, -1)

    npts = 100
    xcoords = torch.linspace(-3, 3, npts)[:,None].to(dtype)
    ycoords = torch.zeros(npts)[:,None].to(dtype)
    zcoords = torch.zeros(npts)[:,None].to(dtype)
    xyz = torch.cat((xcoords, ycoords, zcoords), dim=-1)
    # xyz = torch.rand((10, 3), dtype=dtype)
    dens = h_dqc.aodm2dens(dm, xyz)

    assert dens.dtype == dtype
    kpts_np = h_dqc.kpts.numpy()
    knumint = pbc_numint.KNumInt(kpts=kpts_np)
    cell = df_scf.cell
    ao = knumint.eval_ao(cell, xyz.numpy(), kpts=kpts_np)
    dens_scf = knumint.eval_rho(cell, ao, dm.numpy())
    dens_scf = torch.as_tensor(dens_scf, dtype=dens.dtype)

    # print("dens pyscf:")
    # print(dens_scf)
    # print("dens dqc:")
    # print(dens)
    # print(dens / dens_scf)
    #
    # import matplotlib.pyplot as plt
    # plt.plot(xcoords.view(-1), dens)
    # plt.plot(xcoords.view(-1), dens_scf)
    # plt.show()

    assert torch.allclose(dens, dens_scf)
