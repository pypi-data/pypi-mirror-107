# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  build:
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
    steps:
      - checkout
      - run:
          name: python-build
          command: |
              pip install wheel
              pip install -r requirements.txt
              python -m build
      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job. 
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - dist

  deploy:
    docker:
      - image: python:3.9-buster
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run:
          name: pypi upload
          command: |
              pip install -r requirements.txt
              python -m twine upload -u $PYPI_USER -p $PYPI_TOKEN dist/*

# Orchestrate our job run sequence
workflows:
  build_and_deploy:
    jobs:
      - build:
          matrix:
            parameters:
              image: ["python:3.8-buster", "python:3.9-buster"]
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/      
      - deploy:
          requires:
          - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

# # https://circleci.com/blog/circleci-matrix-jobs/
# version: 2.1

# executors:
#   linux:
#     docker:
#       - image: cimg/base:2020.01
#   macos:
#     macos:
#       xcode: 11.4

# orbs:
#   node: circleci/node@2.0.0

# jobs:
#   test:
#     parameters:
#       os:
#         type: executor
#       node-version:
#         type: string
#     executor: << parameters.os >>
#     steps:
#       - checkout
#       - node/install:
#           node-version: << parameters.node-version >>
#           install-yarn: true
#       - run: yarn test
# workflows:
#   all-tests:
#     jobs:
#       - test:
#           matrix:
#             parameters:
#               os: [linux]
#               node-version: ["10.9.0", "11.9.0", "12.9.1", "13.9.0"]
