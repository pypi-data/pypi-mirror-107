# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.grpc.mapdl.ansys_kernel_pb2 as ansys__kernel__pb2
import ansys.grpc.mapdl.mapdl_pb2 as mapdl__pb2


class MapdlServiceStub(object):
    """============================================================
    ===== API Definition

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendCommand = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/SendCommand',
                request_serializer=mapdl__pb2.CmdRequest.SerializeToString,
                response_deserializer=mapdl__pb2.CmdResponse.FromString,
                )
        self.SendCommandS = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/SendCommandS',
                request_serializer=mapdl__pb2.CmdRequest.SerializeToString,
                response_deserializer=mapdl__pb2.CmdOutput.FromString,
                )
        self.InputFileLocal = channel.stream_stream(
                '/ansys.api.mapdl.v0.MapdlService/InputFileLocal',
                request_serializer=mapdl__pb2.CmdRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.InputFile = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/InputFile',
                request_serializer=mapdl__pb2.InputFileRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.InputFileS = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/InputFileS',
                request_serializer=mapdl__pb2.InputFileRequest.SerializeToString,
                response_deserializer=mapdl__pb2.CmdOutput.FromString,
                )
        self.FctCall = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/FctCall',
                request_serializer=mapdl__pb2.FctCallRequest.SerializeToString,
                response_deserializer=mapdl__pb2.FctCallResponse.FromString,
                )
        self.GetNodes = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/GetNodes',
                request_serializer=ansys__kernel__pb2.EmptyRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Node.FromString,
                )
        self.GetNode = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/GetNode',
                request_serializer=mapdl__pb2.NodeRequest.SerializeToString,
                response_deserializer=mapdl__pb2.NodeResponse.FromString,
                )
        self.SetNode = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/SetNode',
                request_serializer=mapdl__pb2.setNodeRequest.SerializeToString,
                response_deserializer=mapdl__pb2.setNodeResponse.FromString,
                )
        self.Nodes = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/Nodes',
                request_serializer=ansys__kernel__pb2.EmptyRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.GetElements = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/GetElements',
                request_serializer=ansys__kernel__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mapdl__pb2.Element.FromString,
                )
        self.GetElement = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/GetElement',
                request_serializer=mapdl__pb2.ElementRequest.SerializeToString,
                response_deserializer=mapdl__pb2.ElementResponse.FromString,
                )
        self.LoadElements = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/LoadElements',
                request_serializer=ansys__kernel__pb2.EmptyRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.GetElementType = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/GetElementType',
                request_serializer=mapdl__pb2.ElementRequest.SerializeToString,
                response_deserializer=mapdl__pb2.ElementType.FromString,
                )
        self.LoadElementTypeDescription = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/LoadElementTypeDescription',
                request_serializer=ansys__kernel__pb2.EmptyRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.GetParameter = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/GetParameter',
                request_serializer=mapdl__pb2.ParameterRequest.SerializeToString,
                response_deserializer=mapdl__pb2.ParameterResponse.FromString,
                )
        self.GetVariable = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/GetVariable',
                request_serializer=mapdl__pb2.VariableRequest.SerializeToString,
                response_deserializer=mapdl__pb2.VariableResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/Get',
                request_serializer=mapdl__pb2.GetRequest.SerializeToString,
                response_deserializer=mapdl__pb2.GetResponse.FromString,
                )
        self.VGet = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/VGet',
                request_serializer=mapdl__pb2.GetRequest.SerializeToString,
                response_deserializer=mapdl__pb2.VariableResponse.FromString,
                )
        self.VGet2 = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/VGet2',
                request_serializer=mapdl__pb2.GetRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.Ctrl = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/Ctrl',
                request_serializer=ansys__kernel__pb2.CtrlRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.CtrlResponse.FromString,
                )
        self.GetVtkGeometry = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/GetVtkGeometry',
                request_serializer=ansys__kernel__pb2.EmptyRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.GetDataInfo = channel.unary_unary(
                '/ansys.api.mapdl.v0.MapdlService/GetDataInfo',
                request_serializer=mapdl__pb2.ParameterRequest.SerializeToString,
                response_deserializer=mapdl__pb2.DataResponse.FromString,
                )
        self.GetVecData = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/GetVecData',
                request_serializer=mapdl__pb2.ParameterRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.GetMatData = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/GetMatData',
                request_serializer=mapdl__pb2.ParameterRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.SetVecData = channel.stream_unary(
                '/ansys.api.mapdl.v0.MapdlService/SetVecData',
                request_serializer=mapdl__pb2.SetVecDataRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.EmptyResponse.FromString,
                )
        self.SetMatData = channel.stream_unary(
                '/ansys.api.mapdl.v0.MapdlService/SetMatData',
                request_serializer=mapdl__pb2.SetMatDataRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.EmptyResponse.FromString,
                )
        self.UploadFile = channel.stream_unary(
                '/ansys.api.mapdl.v0.MapdlService/UploadFile',
                request_serializer=mapdl__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=mapdl__pb2.UploadFileReply.FromString,
                )
        self.DownloadFile = channel.unary_stream(
                '/ansys.api.mapdl.v0.MapdlService/DownloadFile',
                request_serializer=mapdl__pb2.DownloadFileRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )


class MapdlServiceServicer(object):
    """============================================================
    ===== API Definition

    """

    def SendCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendCommandS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InputFileLocal(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InputFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InputFileS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FctCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Nodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadElements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElementType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadElementTypeDescription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParameter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVariable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VGet2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ctrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVtkGeometry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataInfo(self, request, context):
        """Methods to get APDLMath Data ( VEC / DMAT / SMAT)

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVecData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMatData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVecData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMatData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request_iterator, context):
        """Methods to Upload Download Files

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapdlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCommand,
                    request_deserializer=mapdl__pb2.CmdRequest.FromString,
                    response_serializer=mapdl__pb2.CmdResponse.SerializeToString,
            ),
            'SendCommandS': grpc.unary_stream_rpc_method_handler(
                    servicer.SendCommandS,
                    request_deserializer=mapdl__pb2.CmdRequest.FromString,
                    response_serializer=mapdl__pb2.CmdOutput.SerializeToString,
            ),
            'InputFileLocal': grpc.stream_stream_rpc_method_handler(
                    servicer.InputFileLocal,
                    request_deserializer=mapdl__pb2.CmdRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'InputFile': grpc.unary_stream_rpc_method_handler(
                    servicer.InputFile,
                    request_deserializer=mapdl__pb2.InputFileRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'InputFileS': grpc.unary_stream_rpc_method_handler(
                    servicer.InputFileS,
                    request_deserializer=mapdl__pb2.InputFileRequest.FromString,
                    response_serializer=mapdl__pb2.CmdOutput.SerializeToString,
            ),
            'FctCall': grpc.unary_unary_rpc_method_handler(
                    servicer.FctCall,
                    request_deserializer=mapdl__pb2.FctCallRequest.FromString,
                    response_serializer=mapdl__pb2.FctCallResponse.SerializeToString,
            ),
            'GetNodes': grpc.unary_stream_rpc_method_handler(
                    servicer.GetNodes,
                    request_deserializer=ansys__kernel__pb2.EmptyRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Node.SerializeToString,
            ),
            'GetNode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNode,
                    request_deserializer=mapdl__pb2.NodeRequest.FromString,
                    response_serializer=mapdl__pb2.NodeResponse.SerializeToString,
            ),
            'SetNode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNode,
                    request_deserializer=mapdl__pb2.setNodeRequest.FromString,
                    response_serializer=mapdl__pb2.setNodeResponse.SerializeToString,
            ),
            'Nodes': grpc.unary_stream_rpc_method_handler(
                    servicer.Nodes,
                    request_deserializer=ansys__kernel__pb2.EmptyRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'GetElements': grpc.unary_stream_rpc_method_handler(
                    servicer.GetElements,
                    request_deserializer=ansys__kernel__pb2.EmptyRequest.FromString,
                    response_serializer=mapdl__pb2.Element.SerializeToString,
            ),
            'GetElement': grpc.unary_unary_rpc_method_handler(
                    servicer.GetElement,
                    request_deserializer=mapdl__pb2.ElementRequest.FromString,
                    response_serializer=mapdl__pb2.ElementResponse.SerializeToString,
            ),
            'LoadElements': grpc.unary_stream_rpc_method_handler(
                    servicer.LoadElements,
                    request_deserializer=ansys__kernel__pb2.EmptyRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'GetElementType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetElementType,
                    request_deserializer=mapdl__pb2.ElementRequest.FromString,
                    response_serializer=mapdl__pb2.ElementType.SerializeToString,
            ),
            'LoadElementTypeDescription': grpc.unary_stream_rpc_method_handler(
                    servicer.LoadElementTypeDescription,
                    request_deserializer=ansys__kernel__pb2.EmptyRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'GetParameter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParameter,
                    request_deserializer=mapdl__pb2.ParameterRequest.FromString,
                    response_serializer=mapdl__pb2.ParameterResponse.SerializeToString,
            ),
            'GetVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVariable,
                    request_deserializer=mapdl__pb2.VariableRequest.FromString,
                    response_serializer=mapdl__pb2.VariableResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=mapdl__pb2.GetRequest.FromString,
                    response_serializer=mapdl__pb2.GetResponse.SerializeToString,
            ),
            'VGet': grpc.unary_unary_rpc_method_handler(
                    servicer.VGet,
                    request_deserializer=mapdl__pb2.GetRequest.FromString,
                    response_serializer=mapdl__pb2.VariableResponse.SerializeToString,
            ),
            'VGet2': grpc.unary_stream_rpc_method_handler(
                    servicer.VGet2,
                    request_deserializer=mapdl__pb2.GetRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'Ctrl': grpc.unary_unary_rpc_method_handler(
                    servicer.Ctrl,
                    request_deserializer=ansys__kernel__pb2.CtrlRequest.FromString,
                    response_serializer=ansys__kernel__pb2.CtrlResponse.SerializeToString,
            ),
            'GetVtkGeometry': grpc.unary_stream_rpc_method_handler(
                    servicer.GetVtkGeometry,
                    request_deserializer=ansys__kernel__pb2.EmptyRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'GetDataInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataInfo,
                    request_deserializer=mapdl__pb2.ParameterRequest.FromString,
                    response_serializer=mapdl__pb2.DataResponse.SerializeToString,
            ),
            'GetVecData': grpc.unary_stream_rpc_method_handler(
                    servicer.GetVecData,
                    request_deserializer=mapdl__pb2.ParameterRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'GetMatData': grpc.unary_stream_rpc_method_handler(
                    servicer.GetMatData,
                    request_deserializer=mapdl__pb2.ParameterRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'SetVecData': grpc.stream_unary_rpc_method_handler(
                    servicer.SetVecData,
                    request_deserializer=mapdl__pb2.SetVecDataRequest.FromString,
                    response_serializer=ansys__kernel__pb2.EmptyResponse.SerializeToString,
            ),
            'SetMatData': grpc.stream_unary_rpc_method_handler(
                    servicer.SetMatData,
                    request_deserializer=mapdl__pb2.SetMatDataRequest.FromString,
                    response_serializer=ansys__kernel__pb2.EmptyResponse.SerializeToString,
            ),
            'UploadFile': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=mapdl__pb2.UploadFileRequest.FromString,
                    response_serializer=mapdl__pb2.UploadFileReply.SerializeToString,
            ),
            'DownloadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=mapdl__pb2.DownloadFileRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.mapdl.v0.MapdlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MapdlService(object):
    """============================================================
    ===== API Definition

    """

    @staticmethod
    def SendCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/SendCommand',
            mapdl__pb2.CmdRequest.SerializeToString,
            mapdl__pb2.CmdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendCommandS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/SendCommandS',
            mapdl__pb2.CmdRequest.SerializeToString,
            mapdl__pb2.CmdOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InputFileLocal(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/ansys.api.mapdl.v0.MapdlService/InputFileLocal',
            mapdl__pb2.CmdRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InputFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/InputFile',
            mapdl__pb2.InputFileRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InputFileS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/InputFileS',
            mapdl__pb2.InputFileRequest.SerializeToString,
            mapdl__pb2.CmdOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FctCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/FctCall',
            mapdl__pb2.FctCallRequest.SerializeToString,
            mapdl__pb2.FctCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/GetNodes',
            ansys__kernel__pb2.EmptyRequest.SerializeToString,
            ansys__kernel__pb2.Node.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/GetNode',
            mapdl__pb2.NodeRequest.SerializeToString,
            mapdl__pb2.NodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/SetNode',
            mapdl__pb2.setNodeRequest.SerializeToString,
            mapdl__pb2.setNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Nodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/Nodes',
            ansys__kernel__pb2.EmptyRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetElements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/GetElements',
            ansys__kernel__pb2.EmptyRequest.SerializeToString,
            mapdl__pb2.Element.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetElement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/GetElement',
            mapdl__pb2.ElementRequest.SerializeToString,
            mapdl__pb2.ElementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadElements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/LoadElements',
            ansys__kernel__pb2.EmptyRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetElementType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/GetElementType',
            mapdl__pb2.ElementRequest.SerializeToString,
            mapdl__pb2.ElementType.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadElementTypeDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/LoadElementTypeDescription',
            ansys__kernel__pb2.EmptyRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParameter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/GetParameter',
            mapdl__pb2.ParameterRequest.SerializeToString,
            mapdl__pb2.ParameterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/GetVariable',
            mapdl__pb2.VariableRequest.SerializeToString,
            mapdl__pb2.VariableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/Get',
            mapdl__pb2.GetRequest.SerializeToString,
            mapdl__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/VGet',
            mapdl__pb2.GetRequest.SerializeToString,
            mapdl__pb2.VariableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VGet2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/VGet2',
            mapdl__pb2.GetRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ctrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/Ctrl',
            ansys__kernel__pb2.CtrlRequest.SerializeToString,
            ansys__kernel__pb2.CtrlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVtkGeometry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/GetVtkGeometry',
            ansys__kernel__pb2.EmptyRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.mapdl.v0.MapdlService/GetDataInfo',
            mapdl__pb2.ParameterRequest.SerializeToString,
            mapdl__pb2.DataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVecData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/GetVecData',
            mapdl__pb2.ParameterRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMatData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/GetMatData',
            mapdl__pb2.ParameterRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVecData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ansys.api.mapdl.v0.MapdlService/SetVecData',
            mapdl__pb2.SetVecDataRequest.SerializeToString,
            ansys__kernel__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMatData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ansys.api.mapdl.v0.MapdlService/SetMatData',
            mapdl__pb2.SetMatDataRequest.SerializeToString,
            ansys__kernel__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ansys.api.mapdl.v0.MapdlService/UploadFile',
            mapdl__pb2.UploadFileRequest.SerializeToString,
            mapdl__pb2.UploadFileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.mapdl.v0.MapdlService/DownloadFile',
            mapdl__pb2.DownloadFileRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
