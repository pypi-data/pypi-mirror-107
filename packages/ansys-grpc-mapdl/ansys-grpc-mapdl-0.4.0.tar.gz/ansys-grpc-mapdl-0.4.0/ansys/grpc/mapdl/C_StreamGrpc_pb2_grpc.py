# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.grpc.mapdl.C_StreamGrpc_pb2 as C__StreamGrpc__pb2
import ansys.grpc.mapdl.ansys_kernel_pb2 as ansys__kernel__pb2


class C_StreamGrpcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Open = channel.unary_unary(
                '/ansys.api.grpcstream.v0.C_StreamGrpcService/Open',
                request_serializer=C__StreamGrpc__pb2.OpenRequest.SerializeToString,
                response_deserializer=C__StreamGrpc__pb2.OpenResponse.FromString,
                )
        self.Close = channel.unary_unary(
                '/ansys.api.grpcstream.v0.C_StreamGrpcService/Close',
                request_serializer=C__StreamGrpc__pb2.CloseRequest.SerializeToString,
                response_deserializer=C__StreamGrpc__pb2.CloseResponse.FromString,
                )
        self.Seek = channel.unary_unary(
                '/ansys.api.grpcstream.v0.C_StreamGrpcService/Seek',
                request_serializer=C__StreamGrpc__pb2.SeekRequest.SerializeToString,
                response_deserializer=C__StreamGrpc__pb2.SeekResponse.FromString,
                )
        self.Tell = channel.unary_unary(
                '/ansys.api.grpcstream.v0.C_StreamGrpcService/Tell',
                request_serializer=C__StreamGrpc__pb2.TellRequest.SerializeToString,
                response_deserializer=C__StreamGrpc__pb2.TellResponse.FromString,
                )
        self.Read = channel.unary_stream(
                '/ansys.api.grpcstream.v0.C_StreamGrpcService/Read',
                request_serializer=C__StreamGrpc__pb2.ReadRequest.SerializeToString,
                response_deserializer=ansys__kernel__pb2.Chunk.FromString,
                )
        self.Write = channel.stream_unary(
                '/ansys.api.grpcstream.v0.C_StreamGrpcService/Write',
                request_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
                response_deserializer=C__StreamGrpc__pb2.WriteResponse.FromString,
                )


class C_StreamGrpcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Open(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Seek(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tell(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_C_StreamGrpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Open': grpc.unary_unary_rpc_method_handler(
                    servicer.Open,
                    request_deserializer=C__StreamGrpc__pb2.OpenRequest.FromString,
                    response_serializer=C__StreamGrpc__pb2.OpenResponse.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=C__StreamGrpc__pb2.CloseRequest.FromString,
                    response_serializer=C__StreamGrpc__pb2.CloseResponse.SerializeToString,
            ),
            'Seek': grpc.unary_unary_rpc_method_handler(
                    servicer.Seek,
                    request_deserializer=C__StreamGrpc__pb2.SeekRequest.FromString,
                    response_serializer=C__StreamGrpc__pb2.SeekResponse.SerializeToString,
            ),
            'Tell': grpc.unary_unary_rpc_method_handler(
                    servicer.Tell,
                    request_deserializer=C__StreamGrpc__pb2.TellRequest.FromString,
                    response_serializer=C__StreamGrpc__pb2.TellResponse.SerializeToString,
            ),
            'Read': grpc.unary_stream_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=C__StreamGrpc__pb2.ReadRequest.FromString,
                    response_serializer=ansys__kernel__pb2.Chunk.SerializeToString,
            ),
            'Write': grpc.stream_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=ansys__kernel__pb2.Chunk.FromString,
                    response_serializer=C__StreamGrpc__pb2.WriteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.grpcstream.v0.C_StreamGrpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class C_StreamGrpcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Open(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.grpcstream.v0.C_StreamGrpcService/Open',
            C__StreamGrpc__pb2.OpenRequest.SerializeToString,
            C__StreamGrpc__pb2.OpenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.grpcstream.v0.C_StreamGrpcService/Close',
            C__StreamGrpc__pb2.CloseRequest.SerializeToString,
            C__StreamGrpc__pb2.CloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Seek(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.grpcstream.v0.C_StreamGrpcService/Seek',
            C__StreamGrpc__pb2.SeekRequest.SerializeToString,
            C__StreamGrpc__pb2.SeekResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tell(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.grpcstream.v0.C_StreamGrpcService/Tell',
            C__StreamGrpc__pb2.TellRequest.SerializeToString,
            C__StreamGrpc__pb2.TellResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.grpcstream.v0.C_StreamGrpcService/Read',
            C__StreamGrpc__pb2.ReadRequest.SerializeToString,
            ansys__kernel__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Write(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ansys.api.grpcstream.v0.C_StreamGrpcService/Write',
            ansys__kernel__pb2.Chunk.SerializeToString,
            C__StreamGrpc__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
