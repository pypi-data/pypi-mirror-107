/* Generated by Cython 0.29.23 */

#ifndef __PYX_HAVE__dpctl___sycl_device
#define __PYX_HAVE__dpctl___sycl_device

#include "Python.h"
struct PySyclDeviceObject;

/* "dpctl/_sycl_device.pxd":42
 * 
 * 
 * cdef public class SyclDevice(_SyclDevice) [object PySyclDeviceObject, type PySyclDeviceType]:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef SyclDevice _create(DPCTLSyclDeviceRef dref)
 */
struct PySyclDeviceObject {
  struct __pyx_obj_5dpctl_12_sycl_device__SyclDevice __pyx_base;
  struct __pyx_vtabstruct_5dpctl_12_sycl_device_SyclDevice *__pyx_vtab;
};

#ifndef __PYX_HAVE_API__dpctl___sycl_device

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PySyclDeviceType;

#endif /* !__PYX_HAVE_API__dpctl___sycl_device */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_sycl_device(void);
#else
PyMODINIT_FUNC PyInit__sycl_device(void);
#endif

#endif /* !__PYX_HAVE__dpctl___sycl_device */
