# coding: utf-8

"""
    splitit-web-api-public-sdk

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class Agents(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'agent_number': 'str',
        'email': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'job_title': 'str',
        'fax_number': 'str',
        'mobile_number': 'str',
        'work_phone_number': 'str',
        'notes': 'str',
        'crm_id': 'str',
        'pis_user_unique_id': 'str',
        'merchant_id': 'int',
        'pis_user_id': 'int',
        'merchant': 'Merchants',
        'pis_user': 'object',
        'terminals': 'list[Terminals]'
    }

    attribute_map = {
        'id': 'Id',
        'agent_number': 'AgentNumber',
        'email': 'Email',
        'first_name': 'FirstName',
        'last_name': 'LastName',
        'job_title': 'JobTitle',
        'fax_number': 'FaxNumber',
        'mobile_number': 'MobileNumber',
        'work_phone_number': 'WorkPhoneNumber',
        'notes': 'Notes',
        'crm_id': 'CrmId',
        'pis_user_unique_id': 'PisUserUniqueId',
        'merchant_id': 'MerchantId',
        'pis_user_id': 'PisUserId',
        'merchant': 'Merchant',
        'pis_user': 'PisUser',
        'terminals': 'Terminals'
    }

    def __init__(self, id=None, agent_number=None, email=None, first_name=None, last_name=None, job_title=None, fax_number=None, mobile_number=None, work_phone_number=None, notes=None, crm_id=None, pis_user_unique_id=None, merchant_id=None, pis_user_id=None, merchant=None, pis_user=None, terminals=None):  # noqa: E501
        """Agents - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._agent_number = None
        self._email = None
        self._first_name = None
        self._last_name = None
        self._job_title = None
        self._fax_number = None
        self._mobile_number = None
        self._work_phone_number = None
        self._notes = None
        self._crm_id = None
        self._pis_user_unique_id = None
        self._merchant_id = None
        self._pis_user_id = None
        self._merchant = None
        self._pis_user = None
        self._terminals = None
        self.discriminator = None

        self._id = id
        if agent_number is not None:
            self._agent_number = agent_number
        if email is not None:
            self._email = email
        if first_name is not None:
            self._first_name = first_name
        if last_name is not None:
            self._last_name = last_name
        if job_title is not None:
            self._job_title = job_title
        if fax_number is not None:
            self._fax_number = fax_number
        if mobile_number is not None:
            self._mobile_number = mobile_number
        if work_phone_number is not None:
            self._work_phone_number = work_phone_number
        if notes is not None:
            self._notes = notes
        if crm_id is not None:
            self._crm_id = crm_id
        if pis_user_unique_id is not None:
            self._pis_user_unique_id = pis_user_unique_id
        if merchant_id is not None:
            self._merchant_id = merchant_id
        if pis_user_id is not None:
            self._pis_user_id = pis_user_id
        if merchant is not None:
            self._merchant = merchant
        if pis_user is not None:
            self._pis_user = pis_user
        if terminals is not None:
            self._terminals = terminals

    @property
    def id(self):
        """Gets the id of this Agents.  # noqa: E501


        :return: The id of this Agents.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Agents.


        :param id: The id of this Agents.  # noqa: E501
        :type: int
        """
        
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def agent_number(self):
        """Gets the agent_number of this Agents.  # noqa: E501


        :return: The agent_number of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._agent_number

    @agent_number.setter
    def agent_number(self, agent_number):
        """Sets the agent_number of this Agents.


        :param agent_number: The agent_number of this Agents.  # noqa: E501
        :type: str
        """

        self._agent_number = agent_number

    @property
    def email(self):
        """Gets the email of this Agents.  # noqa: E501


        :return: The email of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Agents.


        :param email: The email of this Agents.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this Agents.  # noqa: E501


        :return: The first_name of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Agents.


        :param first_name: The first_name of this Agents.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this Agents.  # noqa: E501


        :return: The last_name of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Agents.


        :param last_name: The last_name of this Agents.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def job_title(self):
        """Gets the job_title of this Agents.  # noqa: E501


        :return: The job_title of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this Agents.


        :param job_title: The job_title of this Agents.  # noqa: E501
        :type: str
        """

        self._job_title = job_title

    @property
    def fax_number(self):
        """Gets the fax_number of this Agents.  # noqa: E501


        :return: The fax_number of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._fax_number

    @fax_number.setter
    def fax_number(self, fax_number):
        """Sets the fax_number of this Agents.


        :param fax_number: The fax_number of this Agents.  # noqa: E501
        :type: str
        """

        self._fax_number = fax_number

    @property
    def mobile_number(self):
        """Gets the mobile_number of this Agents.  # noqa: E501


        :return: The mobile_number of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._mobile_number

    @mobile_number.setter
    def mobile_number(self, mobile_number):
        """Sets the mobile_number of this Agents.


        :param mobile_number: The mobile_number of this Agents.  # noqa: E501
        :type: str
        """

        self._mobile_number = mobile_number

    @property
    def work_phone_number(self):
        """Gets the work_phone_number of this Agents.  # noqa: E501


        :return: The work_phone_number of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._work_phone_number

    @work_phone_number.setter
    def work_phone_number(self, work_phone_number):
        """Sets the work_phone_number of this Agents.


        :param work_phone_number: The work_phone_number of this Agents.  # noqa: E501
        :type: str
        """

        self._work_phone_number = work_phone_number

    @property
    def notes(self):
        """Gets the notes of this Agents.  # noqa: E501


        :return: The notes of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Agents.


        :param notes: The notes of this Agents.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def crm_id(self):
        """Gets the crm_id of this Agents.  # noqa: E501


        :return: The crm_id of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._crm_id

    @crm_id.setter
    def crm_id(self, crm_id):
        """Sets the crm_id of this Agents.


        :param crm_id: The crm_id of this Agents.  # noqa: E501
        :type: str
        """

        self._crm_id = crm_id

    @property
    def pis_user_unique_id(self):
        """Gets the pis_user_unique_id of this Agents.  # noqa: E501


        :return: The pis_user_unique_id of this Agents.  # noqa: E501
        :rtype: str
        """
        return self._pis_user_unique_id

    @pis_user_unique_id.setter
    def pis_user_unique_id(self, pis_user_unique_id):
        """Sets the pis_user_unique_id of this Agents.


        :param pis_user_unique_id: The pis_user_unique_id of this Agents.  # noqa: E501
        :type: str
        """

        self._pis_user_unique_id = pis_user_unique_id

    @property
    def merchant_id(self):
        """Gets the merchant_id of this Agents.  # noqa: E501


        :return: The merchant_id of this Agents.  # noqa: E501
        :rtype: int
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this Agents.


        :param merchant_id: The merchant_id of this Agents.  # noqa: E501
        :type: int
        """

        self._merchant_id = merchant_id

    @property
    def pis_user_id(self):
        """Gets the pis_user_id of this Agents.  # noqa: E501


        :return: The pis_user_id of this Agents.  # noqa: E501
        :rtype: int
        """
        return self._pis_user_id

    @pis_user_id.setter
    def pis_user_id(self, pis_user_id):
        """Sets the pis_user_id of this Agents.


        :param pis_user_id: The pis_user_id of this Agents.  # noqa: E501
        :type: int
        """

        self._pis_user_id = pis_user_id

    @property
    def merchant(self):
        """Gets the merchant of this Agents.  # noqa: E501


        :return: The merchant of this Agents.  # noqa: E501
        :rtype: Merchants
        """
        return self._merchant

    @merchant.setter
    def merchant(self, merchant):
        """Sets the merchant of this Agents.


        :param merchant: The merchant of this Agents.  # noqa: E501
        :type: Merchants
        """

        self._merchant = merchant

    @property
    def pis_user(self):
        """Gets the pis_user of this Agents.  # noqa: E501


        :return: The pis_user of this Agents.  # noqa: E501
        :rtype: object
        """
        return self._pis_user

    @pis_user.setter
    def pis_user(self, pis_user):
        """Sets the pis_user of this Agents.


        :param pis_user: The pis_user of this Agents.  # noqa: E501
        :type: object
        """

        self._pis_user = pis_user

    @property
    def terminals(self):
        """Gets the terminals of this Agents.  # noqa: E501


        :return: The terminals of this Agents.  # noqa: E501
        :rtype: list[Terminals]
        """
        return self._terminals

    @terminals.setter
    def terminals(self, terminals):
        """Sets the terminals of this Agents.


        :param terminals: The terminals of this Agents.  # noqa: E501
        :type: list[Terminals]
        """

        self._terminals = terminals

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Agents, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Agents):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
