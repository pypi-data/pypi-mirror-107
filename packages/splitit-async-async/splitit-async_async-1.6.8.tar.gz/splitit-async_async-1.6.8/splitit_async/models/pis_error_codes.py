# coding: utf-8

"""
    splitit-web-api-public-sdk

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PisErrorCodes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CONFIGURATIONKEYNOTFOUND = "ConfigurationKeyNotFound"
    IDNOTFOUND = "IdNotFound"
    INVALIDINPUT = "InvalidInput"
    EXTERNALSYSTEMCALLFAILED = "ExternalSystemCallFailed"
    IDEMPOTENCYERROR = "IdempotencyError"
    IDEMPOTENCYORIGINALREQUESTERROR = "IdempotencyOriginalRequestError"
    RULEDATAALREADYEXISTS = "RuleDataAlreadyExists"
    PGPENCRYPTIONKEYNOTFOUND = "PGPEncryptionKeyNotFound"
    INVALIDPGPKEY = "InvalidPGPKey"
    INVALIDINSTALLMENTPLANNUMBER = "InvalidInstallmentPlanNumber"
    INVALIDINSTALLMENTPLANSTATUS = "InvalidInstallmentPlanStatus"
    INVALIDCCCARDTYPENOTSUPPORTED = "InvalidCCCardTypeNotSupported"
    INVALIDNUMBEROFINSTALLMENTS = "InvalidNumberOfInstallments"
    INVALIDAMOUNTFORMAT = "InvalidAmountFormat"
    CARDUPDATEISNOTALLOWED = "CardUpdateIsNotAllowed"
    INVALIDCOUNTRYCODE = "InvalidCountryCode"
    INVALIDRESPONSEURL = "InvalidResponseURL"
    INVALIDCARDHOLDERNAME = "InvalidCardholderName"
    INVALIDAMOUNT = "InvalidAmount"
    INVALIDCVV = "InvalidCVV"
    INVALIDCARDNUMBER = "InvalidCardNumber"
    INVALIDEXPIRATIONDATE = "InvalidExpirationDate"
    INVALIDCONSUMERFULLNAME = "InvalidConsumerFullName"
    INVALIDEMAILFORMAT = "InvalidEmailFormat"
    INVALIDADDRESS = "InvalidAddress"
    INVALIDZIPCODE = "InvalidZIPCode"
    INVALIDCCISSUECOUNTRYNOTSUPPORTEDBYTERMINAL = "InvalidCCIssueCountryNotSupportedByTerminal"
    INVALIDCURRENCY = "InvalidCurrency"
    INVALIDMASKEDCCNUMNOTFOUNDINPLAN = "InvalidMaskedCcNumNotFoundInPlan"
    INSTALLMENTPLANISABOUTTOEXPIRE = "InstallmentPlanIsAboutToExpire"
    COUNTRYSUBDIVISIONNOTSUPPORTED = "CountrySubdivisionNotSupported"
    UPDATEINSTALLMENT_WITHHIGHERAMOUNTTHANPERSISTEDISNOTALLOW = "UpdateInstallment_WithHigherAmountThanPersistedIsNotAllow"
    UPDATEINSTALLMENT_FIRSTINSTALLMENTWITHHIGHERAMOUNTTHANPERSISTEDISNOTALLOW = "UpdateInstallment_FirstInstallmentWithHigherAmountThanPersistedIsNotAllow"
    UPDATEINSTALLMENT_INTHEMIDDLEOFPLANASZEROISNOTALLOW = "UpdateInstallment_InTheMiddleOfPlanAsZeroIsNotAllow"
    REFUNDINSTALLMENTWITHHIGHERAMOUNTTHANORIGINALISNOTALLOWED = "RefundInstallmentWithHigherAmountThanOriginalIsNotAllowed"
    REFUNDINSTALLMENTTHATHASBEENCAPTUREDYETISNOTALLOWED = "RefundInstallmentThatHasBeenCapturedYetIsNotAllowed"
    UPDATEINSTALLMENT_ALREADYPROCESSED = "UpdateInstallment_AlreadyProcessed"
    APPROVEPLAN_PLANALREADYAPPROVED = "ApprovePlan_PlanAlreadyApproved"
    INVALIDEXPIRATIONDATEFORMAT = "InvalidExpirationDateFormat"
    INVALIDCCBINNOTFOUND = "InvalidCCBinNotFound"
    INVALIDCCCARDBRANDNOTSUPPORTED = "InvalidCCCardBrandNotSupported"
    APPROVEPLAN_NOAPPROVALEVIDENCE = "ApprovePlan_NoApprovalEvidence"
    PLANWITHTHESAMEPAYMENTDATAALREADYBEENCREATEDLATELY = "PlanWithTheSamePaymentDataAlreadyBeenCreatedLately"
    INVALIDFUTURECHARGEDATE = "InvalidFutureChargeDate"
    INVALIDFIRSTINSTALLMENTAMOUNT = "InvalidFirstInstallmentAmount"
    CULTURENAMENOTVALID = "CultureNameNotValid"
    CULTURENOTSUPPORTED = "CultureNotSupported"
    SYSTEMTEXTKEYNOTFOUND = "SystemTextKeyNotFound"
    TERMINALNOTFOUNDBYSUPPLIEDAPIKEY = "TerminalNotFoundBySuppliedApiKey"
    UNKNOWNZIPCODE = "UnknownZipCode"
    CCREJECTIONPROCESSCANNOTBEINITIATEDDUETOAUTHEXPIRATION = "CCRejectionProcessCannotBeInitiatedDueToAuthExpiration"
    CANTCHARGEINSTALLMENTWHILEPLANCHARGESAREONHOLD = "CantChargeInstallmentWhilePlanChargesAreOnHold"
    CANTRELEASEHOLDONCHARGESSINCECHARGESARENOTHOLDED = "CantReleaseHoldOnChargesSinceChargesAreNotHolded"
    REFUNDNOTALLOWEDONEORMOREINSTALLMENTSPASSEDREFUNDALLOWEDTIME = "RefundNotAllowedOneOrMoreInstallmentsPassedRefundAllowedTime"
    REFUNDPARTIALYFAILEDONEORMOREINSTALLMENTFAILEDREFUND = "RefundPartialyFailedOneOrMoreInstallmentFailedRefund"
    REFUNDFAILED = "RefundFailed"
    UPDATEPLANPARAMETERSARENOTSUPPORTED = "UpdatePlanParametersAreNotSupported"
    REFUNDREQUESTEDAMOUNTEXCEEDEDPLANREFUNDABLEAMOUNT = "RefundRequestedAmountExceededPlanRefundableAmount"
    INVALIDCURRENCY_NOTSUPPORTEDBYTERMINAL = "InvalidCurrency_NotSupportedByTerminal"
    CREDITCARDISMISSING = "CreditCardIsMissing"
    PISMEMBERISMISSING = "PisMemberIsMissing"
    ADDRESSDATAISMISSINGORPARTIALLYINITIATED = "AddressDataIsMissingOrPartiallyInitiated"
    CARDHOLDERNAMEISMISSING = "CardHolderNameIsMissing"
    CARDNUMBERISMISSING = "CardNumberIsMissing"
    CARDEXPIRATIONMONTHISMISSING = "CardExpirationMonthIsMissing"
    CARDEXPIRATIONYEARISMISSING = "CardExpirationYearIsMissing"
    NUMBEROFINSTALLMENTNOTDEFINED = "NumberOfInstallmentNotDefined"
    INVALIDSTATECODE = "InvalidStateCode"
    EMAILISMISSING = "EmailIsMissing"
    CONSUMERFULLNAMEISMISSING = "ConsumerFullNameIsMissing"
    CURRENCYMUSTBEDEFINEDONTRANSACTION = "CurrencyMustBeDefinedOnTransaction"
    COULDNOTFUNDINSTALLMENTPLAN = "CouldNotFundInstallmentPlan"
    COULDNOTREVERTFUND = "CouldNotRevertFund"
    INVALIDPLANSTRATEGY = "InvalidPlanStrategy"
    FULLCAPTURENOTSUPPORTED = "FullCaptureNotSupported"
    INVALIDCCPREPAIDCARDNOTSUPPORTED = "InvalidCcPrepaidCardNotSupported"
    CARDEXPIREBEFOREPLANENDS = "CardExpireBeforePlanEnds"
    PARTIALPLANAMOUNTAUTHORIZED = "PartialPlanAmountAuthorized"
    SECUREDAUTHORIZATIONREQUIREDFORPARTIALPAYMENT = "SecuredAuthorizationRequiredForPartialPayment"
    THREEDSECUREDATANOTFOUND = "ThreeDSecureDataNotFound"
    THREEDSECURENOTSUPPORTEDBYPLANSTRATEGY = "ThreeDSecureNotSupportedByPlanStrategy"
    THREEDSECUREREQUIREDDATAMISSING = "ThreeDSecureRequiredDataMissing"
    STRATEGYNOTALLOWED = "StrategyNotAllowed"
    PAYMENTTOKENNOTVALID = "PaymentTokenNotValid"
    ACTIVITYNOTSUPPORTEDFORPLANSTRATEGY = "ActivityNotSupportedForPlanStrategy"
    PAYMENTWIZARDVIEWNOTEXIST = "PaymentWizardViewNotExist"
    INVALIDURL = "InvalidUrl"
    ISSUERBINNOTSUPPORTINGINSTALLMENTEXCEPTION = "IssuerBinNotSupportingInstallmentException"
    COULDNOTCHANGELENDER = "CouldNotChangeLender"
    FRAUDDETECED = "FraudDeteced"
    PHONEISMISSING = "PhoneIsMissing"
    INVALIDPHONEFORMAT = "InvalidPhoneFormat"
    INSTALLMENTMISSINGOPENAUTHORIZATION = "InstallmentMissingOpenAuthorization"
    GENERALERROR = "GeneralError"
    GTWYRESULTGENERALERROR = "GtwyResultGeneralError"
    GTWYRESULTCCDATAAVSZIP = "GtwyResultCCDataAVSZip"
    GTWYRESULTCCDATAAVSADDRESS = "GtwyResultCCDataAVSAddress"
    GTWYRESULTCCDATACVV = "GtwyResultCCDataCVV"
    GTWYRESULTCCDATACCEXPIRATION = "GtwyResultCCDataCCExpiration"
    GTWYRESULTCCDATAAVS = "GtwyResultCCDataAVS"
    GTWYRESULTCCDATANUMBER = "GtwyResultCCDataNumber"
    GTWYRESULTCCDATAGENERALPROBLEM = "GtwyResultCCDataGeneralProblem"
    GTWYRESULTCCDATAINSUFFICIENTFUNDS = "GtwyResultCCDataInsufficientFunds"
    GTWYRESULTCCWASDECLINED = "GtwyResultCCWasDeclined"
    GTWYCONNECTIVITYPROBLEM = "GtwyConnectivityProblem"
    GTWYMERCHANTDATAPROBLEM = "GtwyMerchantDataProblem"
    GTWYREQUIRE3DAUTHENTICATION = "GtwyRequire3DAuthentication"
    INVALIDCREDENTIALS = "InvalidCredentials"
    USERISLOCKED = "UserIsLocked"
    USERISLOCKEDDUEINACTIVITY = "UserIsLockedDueInactivity"
    SESSIONNOTVALID = "SessionNotValid"
    SESSIONEXPIRED = "SessionExpired"
    ACTIVITYNOTALLOWEDFORUSER = "ActivityNotAllowedForUser"
    ACTIVITYONMERCHANTNOTALLOWEDFORUSER = "ActivityOnMerchantNotAllowedForUser"
    ACTIVITYONTERMINALNOTALLOWEDFORUSER = "ActivityOnTerminalNotAllowedForUser"
    ACTIVITYONINSTALLMENTPLANNOTALLOWEDFORUSER = "ActivityOnInstallmentPlanNotAllowedForUser"
    TOKENNOTFOUNDOREXPIRED = "TokenNotFoundOrExpired"
    TOKENALREADYUSED = "TokenAlreadyUsed"
    USEROLDPASSRODISINCORRECT = "UserOldPassrodIsIncorrect"
    USERNEWPASSWORDALREADYUSED = "UserNewPasswordAlreadyUsed"
    USEREMAILNOTFOUND = "UserEmailNotFound"
    PASSWORDEXPIRED = "PasswordExpired"
    TOUCHPOINTNOTFOUND = "TouchPointNotFound"
    ACTIVITYNOTALLOWEDFORPUBLICSESSION = "ActivityNotAllowedForPublicSession"
    USERRELATESTOMORETHANSINGLEBUSINESSUNIT = "UserRelatesToMoreThanSingleBusinessUnit"
    INVALIDPASSWORDSTRENGTH = "InvalidPasswordStrength"
    INVALIDREQUESTEDSTRATEGY = "InvalidRequestedStrategy"
    ROLENOTALLOWEDFORUSER = "RoleNotAllowedForUser"
    USERNAMEALREADYEXISTS = "UserNameAlreadyExists"
    ACTIVITYNOTALLOWEDFORAUTHENTICATIONTYPE = "ActivityNotAllowedForAuthenticationType"
    ACTIVITYNOTALLOWEDDUETOPRIVACYPROTECTION = "ActivityNotAllowedDueToPrivacyProtection"
    BUSINESSUNITNOTALLOWEDFORUSER = "BusinessUnitNotAllowedForUser"
    UPDATETODIFFERENTBUSINESSPARTYROLENOTALLOWED = "UpdateToDifferentBusinessPartyRoleNotAllowed"
    EXTERNALAUTHAMOUNTNOTVALID = "ExternalAuthAmountNotValid"
    CAPTCHANOTSUCCESSFUL = "CaptchaNotSuccessful"
    REPORTNOTALLOWEDFORUSER = "ReportNotAllowedForUser"
    INVALIDPERIODRANGEVALUES = "InvalidPeriodRangeValues"
    REMOVEDTRANSACTIONCURRENCYISINUSEBYTERMINAL = "RemovedTransactionCurrencyIsInUseByTerminal"
    REMOVEDTRANSACTIONCURRENCYISINUSEBYACCOUNTINGCURRENCY = "RemovedTransactionCurrencyIsInUseByAccountingCurrency"
    INVALIDAMOUNTRANGEVALUES = "InvalidAmountRangeValues"
    EMAILCANNOTBEEMPTY = "EmailCannotBeEmpty"
    COUNTRYNOTSUPPORTED = "CountryNotSupported"
    TERMINALAPIKEYMISSING = "TerminalApiKeyMissing"
    TOTALWEIGHTEDVALUESNOTEQUAL100 = "TotalWeightedValuesNotEqual100"
    AMOUNTEXCEEDEDMAXALLOWEDFORFUNDINGOPERATION = "AmountExceededMaxAllowedForFundingOperation"
    FUNDEDPLANSCANNOTBECANCELEDWITHOUTREFUND = "FundedPlansCannotBeCanceledWithoutRefund"
    INSTALLMENTSCANNOTBEUPDATEDONFUNDEDPLANWITHLOWERPLANAMOUNT = "InstallmentsCannotBeUpdatedOnFundedPlanWithLowerPlanAmount"
    NOFUNDINGPLANINFOFORINSTALLMENTPLAN = "NoFundingPlanInfoForInstallmentPlan"
    NOFUNDINGSETUPFORBUSINESSUNIT = "NoFundingSetupForBusinessUnit"
    MERCHANTISNOTFINANCEDYET = "MerchantIsNotFinancedYet"
    SALESFORCEOPERATIONERROR = "SalesforceOperationError"
    MULTIPLEMESSAGINGMEANSPROVIDED = "MultipleMessagingMeansProvided"
    NOMESSAGINGMEANSWASPROVIDED = "NoMessagingMeansWasProvided"
    LOGOCANNOTBEREMOVED = "LogoCannotBeRemoved"
    PLANISLOCKEDFORCHANGES = "PlanIsLockedForChanges"
    CANNOTPERFROMACTIONDUETOACTIVEDELAYDCHARGE = "CannotPerfromActionDueToActiveDelaydCharge"
    EXTERNALINSTALLMENTPROVIDERERROR = "ExternalInstallmentProviderError"
    CANNOTCHANGEAMOUNTWHENSTATUSISNTINITIALIZE = "CannotChangeAmountWhenStatusIsntInitialize"
    INVALIDCCCARDTYPENOTSUPPORTEDMORETHANXINSTALLMENTS = "InvalidCCCardTypeNotSupportedMoreThanXInstallments"
    INVALIDCCCARDTYPENOTSUPPORTEDMORETHANXAMOUNT = "InvalidCCCardTypeNotSupportedMoreThanXAmount"
    PLANAMOUNTEXCEEDSALLOWEDDECIMALPLACES = "PlanAmountExceedsAllowedDecimalPlaces"
    INVALIDCCCARDBRANDNOTSUPPORTEDMORETHANXINSTALLMENTS = "InvalidCCCardBrandNotSupportedMoreThanXInstallments"
    INVALIDCCCARDBRANDNOTSUPPORTEDMORETHANXAMOUNT = "InvalidCCCardBrandNotSupportedMoreThanXAmount"
    EMAILNOTVERIFIED = "EmailNotVerified"
    INVALIDCCPREPAIDCARDNOTSUPPORTEDMORETHANXINSTALLMENTS = "InvalidCcPrepaidCardNotSupportedMoreThanXInstallments"
    INVALIDCCPREPAIDCARDNOTSUPPORTEDMORETHANXAMOUNT = "InvalidCcPrepaidCardNotSupportedMoreThanXAmount"
    PLANCONTEXTNOTVALIDFORNUMBEROFINSTALLMENTS = "PlanContextNotValidForNumberOfInstallments"
    PLANCONTEXTNOTVALIDFORAMOUNT = "PlanContextNotValidForAmount"
    USEREMAILALREADYEXISTS = "UserEmailAlreadyExists"
    USERNOTFOUND = "UserNotFound"
    NONE = "None"

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self):  # noqa: E501
        """PisErrorCodes - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PisErrorCodes, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PisErrorCodes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
