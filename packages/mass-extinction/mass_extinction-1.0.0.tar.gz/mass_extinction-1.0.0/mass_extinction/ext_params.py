'''
Biologically-Inspired Mass Extinction in Evolutionary Algorithms
Author: Kaelan Engholdt
Version: 05/26/2021

Holds all of the adjustable extinction parameters for the Extinction class in 'mass_extinction.py'.
Consult Sections 8 and 9 of the 'README.md' for more information and details regarding the extinction parameters.

Note: The user must add the code found under the newborn parameters to the initialization of their member class
      (see Sub-Section 8.9).

'''

# TODO user must copy this file and place it in the same directory as their evolutionary algorithm

# TODO user must properly adjust all of the parameters they desire to use

# basic extinction parameters (see Sub-Section 8.1)
ext_operator_on = None           # turns the extinction operator on or off
ext_percent = 0.00               # percent of the population to kill (anti-elitism not included)
ext_duration = 0                 # number of generations it will take to kill 'ext_percent' of members, '1' is instant
ext_sort_order = None            # indicates how the population is sorted, best to worst (True) or worst to best (False)
ext_kills_least_fit = None       # indicates if extinction kills the least fit members (True) or random members (False)
ext_kills_constant = None        # indicates if the amount extinction kills is constant (True) or logarithmic (False)
ext_virulence = None             # indicates if extinction gets stronger (True) or weaker (False) as it progresses
ext_pop_dynamics_on = None       # turns population dynamics on or off
ext_pop_dyn_strength = 0.00      # specifies how strong population dynamics are, a value close to '0.15' is recommended
ext_end_extinction = None        # indicates if the extinction operator will turn off after reaching a later generation
ext_end_percent = 0.00           # percent of generations that will execute before the extinction operator is turned off
ext_safeguard = 0                # minimum number of generations between possible extinction events
ext_print_on = None              # turns print statements on or off for extinction and repopulation information
ext_testing_on = None            # indicates if parameter sets in 'ext_types.py' will be used (True) or not (False)
ext_uses_DEAP = None             # indicates if the Distributed Evolutionary Algorithms in Python (DEAP) library is used

# elitism parameters (see Sub-Section 8.2)
ext_elite_on = None              # turns elitism on or off
ext_elite_percent = 0.00         # percent of population to consider elite (guaranteed to survive extinction)

# anti-elitism parameters (see Sub-Section 8.3)
ext_anti_elite_on = None         # turns anti-elitism on or off
ext_anti_elite_percent = 0.00    # percent of population to consider anti-elite (will be killed if an extinction occurs)

# extinction types (see Sub-Section 8.4)
interval_extinction_on = None    # turns interval extinction on or off
prob_extinction_on = None        # turns probabilistic extinction on or off
fit_extinction_on = None         # turns fitness extinction on or off

# interval extinction parameters (see Sub-Section 8.5)
i_ext_interval = 0               # number of generations between extinction events (after repopulation)

# probabilistic extinction parameters (see Sub-Section 8.6)
p_ext_interval = 0               # number of generations between checking for extinction events (after repopulation)
p_ext_base_prob = 0.00           # base extinction probability (resets to base probability after extinction event)
p_ext_prob_inc = 0.00            # amount to increase 'p_ext_prob' by when a generation passes and no extinction occurs
p_ext_always_resets = None       # indicates if probability always resets upon any extinction or only for probabilistic

# fitness extinction parameters (see Sub-Section 8.7)
f_ext_interval = 0               # number of generations between checking for extinction events (after repopulation)
f_ext_pop_percent = 0.00         # percent of the population that is required to pass the 'f_ext_improve_percent'
f_ext_improve_percent = 0.00     # the required percentage of fitness improvement since the previous interval check

# repopulation parameters (see Sub-Section 8.8)
repop_duration = 0               # number of generations for population to return to original size, '1' is instant
repop_constant = None            # indicates if gradual repopulation amount is constant (True) or logarithmic (False)
repop_growth = None              # indicates if the repopulation gets stronger (True) or weaker (False) as it progresses
repop_use_elites = None          # turns use of elite members (if 'ext_elite_on' is enabled) for repopulation on or off
repop_elite_percent = 0.00       # percent of members that will be generated by the elite members during repopulation
repop_use_survivors = None       # turns use of surviving members for repopulation on or off
repop_survivor_percent = 0.00    # percent of members that will be generated by the current members of the population

# newborn parameters (see Sub-Section 8.9)
newborn_params_on = None         # turns newborn parameters on or off
newborn_expires = 0              # number of generations repopulated members are considered newborn members
newborn_protection_on = None     # turns protection (guaranteed to survive extinction) for newborn members on or off
# TODO user must add the following two lines of code to the initialization of their member class:
#     self.ext_is_newborn = False
#     self.ext_newborn_gens = 0


'''
All of the following parameters are alternate parameters that interact with parameters from the evolutionary algorithm,
specifically the selection tournament size, the crossover probability, the mutation probability, and the mutation rate.
This is done in order to reflect what happens in biological extinction events.
Consult Section 9 of the 'README.md' for more information.
'''

# alternate parameters (see Sub-Section 9.1)
alt_params_on = None             # turns alternate parameters on or off

# alternate selection parameters (see Sub-Section 9.2)
alt_select_on = None             # turns alternate selection parameters on or off
alt_tourn_size = 0               # how much to decrease the tournament size by when extinction occurs

# alternate crossover parameters (see Sub-Section 9.3)
alt_xo_on = None                 # turns alternate crossover parameters on or off
alt_xo_prob = 0.00               # how much to increase the probability of crossover occurring by when extinction occurs

# alternate mutation parameters (see Sub-Section 9.4)
alt_mut_on = None                # turns alternate mutation parameters on or off
alt_mut_prob = 0.00              # how much to increase the probability of mutation occurring by when extinction occurs
alt_mut_rate = 0.00              # how much to increase the mutation rate by when extinction occurs


'''
All of the following variables are untunable and should NOT be changed.
They are variables that are used by the Extinction class internally as global variables.
'''

# untunable extinction variables - DO NOT CHANGE
ext_original_size = 0            # tracks original population size before extinction event
ext_remaining_pop = []           # holds all remaining members after filtering out elite members and newborn members
ext_pop_dyn_pop = []             # holds all extra members to be killed/repopulated if population dynamics are enabled
ext_occurred = False             # indicates an extinction event occurred in the current generation
ext_in_progress = False          # indicates that an extinction event is in progress
ext_gens_tracker = 1             # tracks the generational progression of the extinction event
ext_generations = 0              # tracks the number of generations since the advent of the last extinction event
ext_gens_zeroed = False          # indicates whether this evolutionary algorithm uses zero-indexed generations or not
ext_gens_since_repop = 0         # indicates how many generations it has been since the last repopulation finished
ext_values = []                  # holds all birth/death values to be used during extinction/repopulation
ext_out_str = ""                 # records extinction information for writing to the log file

# untunable elitism variables - DO NOT CHANGE
ext_elite_pop = []               # holds all elite members

# untunable probabilistic extinction variables - DO NOT CHANGE
p_ext_prob = p_ext_base_prob     # current probability of extinction (starts as equal to 'p_ext_base_prob')

# untunable repopulation variables - DO NOT CHANGE
repop_in_progress = False        # indicates if the population is still repopulating itself
repop_gens_tracker = 1           # tracks gradual repopulation generational progress

# untunable newborn variables - DO NOT CHANGE
newborn_pop = []                 # holds all newborn members that are not considered elite members
