import json


class EmojiDumper:
    def __init__(self, source='emojis.json', output='data.py'):
        with open(source, 'rb') as fp:
            self.source = json.load(fp)

        self.output = open(output, 'w', encoding='utf-8')

        self.indent = 0

    def write(self, string):
        self.output.write('    ' * self.indent)
        self.output.write(string)

    def dump_emoji(self, data):
        self.output.write('\n')
        self.write(f'({data["surrogates"].encode()}, (')

        space = False
        for name in data['names']:
            if space:
                self.output.write(' ')
            space = True
            self.output.write(f'{name!r},')

        self.output.write(f'), {data["unicodeVersion"]}, (')

        self.indent += 1

        children = data.get('diversityChildren', ())
        for child in children:
            self.dump_emoji(child)

        self.indent -= 1

        if len(children) == 1:
            self.output.write(',')

        self.output.write(')')

        self.output.write('),')

    def dump_categories(self, data):
        for category in data:
            self.write(f'{category.upper()} = [')

            self.indent += 1

            for emoji in data[category]:
                self.dump_emoji(emoji)

            self.indent -= 1

            self.write('\n]\n\n')

            self.write(
                f'ALL_CATEGORIES[{category.upper()!r}] = '
                f'{category.upper()}\n\n')

    def dump(self):
        self.output.write(
            '# * Automatically generated by dumper.py - BEGIN *\n\n')
        self.output.write('# flake8: noqa\n\n')
        self.output.write('ALL_CATEGORIES = {}\n\n')
        self.dump_categories(self.source)
        self.output.write(
            '# * Automatically generated by dumper.py - END *\n\n')


if __name__ == '__main__':
    dumper = EmojiDumper()
    dumper.dump()
    dumper.output.close()
