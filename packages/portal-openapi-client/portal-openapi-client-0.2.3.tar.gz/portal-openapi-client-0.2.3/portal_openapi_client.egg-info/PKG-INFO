Metadata-Version: 2.1
Name: portal-openapi-client
Version: 0.2.3
Summary: Portal OpenAPI
Home-page: UNKNOWN
Author: OpenAPI Generator community
Author-email: team@openapitools.org
License: UNKNOWN
Description: # portal-openapi-client
        No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
        
        This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:
        
        - API version: 1.0.0
        - Package version: 0.2.1
        - Build package: org.openapitools.codegen.languages.PythonClientCodegen
        
        ## Requirements.
        
        Python >= 3.6
        
        ## Installation & Usage
        ### pip install
        
        If the python package is hosted on a repository, you can install directly using:
        
        ```sh
        pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
        ```
        (you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)
        
        Then import the package:
        ```python
        import openapi_client
        ```
        
        ### Setuptools
        
        Install via [Setuptools](http://pypi.python.org/pypi/setuptools).
        
        ```sh
        python setup.py install --user
        ```
        (or `sudo python setup.py install` to install the package for all users)
        
        Then import the package:
        ```python
        import openapi_client
        ```
        
        ## Getting Started
        
        Please follow the [installation procedure](#installation--usage) and then run the following:
        
        ```python
        
        import time
        import openapi_client
        from pprint import pprint
        from openapi_client.api import companies_api
        from openapi_client.model.company import Company
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = companies_api.CompaniesApi(api_client)
            
            try:
                api_response = api_instance.companies_list()
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling CompaniesApi->companies_list: %s\n" % e)
        ```
        
        ## Documentation for API Endpoints
        
        All URIs are relative to *http://localhost*
        
        Class | Method | HTTP request | Description
        ------------ | ------------- | ------------- | -------------
        *CompaniesApi* | [**companies_list**](docs/CompaniesApi.md#companies_list) | **GET** /api/companies/ | 
        *CompaniesApi* | [**companies_retrieve**](docs/CompaniesApi.md#companies_retrieve) | **GET** /api/companies/{id}/ | 
        *MachinecounterreadingsApi* | [**machinecounterreadings_list**](docs/MachinecounterreadingsApi.md#machinecounterreadings_list) | **GET** /api/machinecounterreadings/ | 
        *MachinesApi* | [**machines_list**](docs/MachinesApi.md#machines_list) | **GET** /api/machines/ | 
        *MachinesApi* | [**machines_retrieve**](docs/MachinesApi.md#machines_retrieve) | **GET** /api/machines/{id}/ | 
        *SchemaApi* | [**schema_retrieve**](docs/SchemaApi.md#schema_retrieve) | **GET** /api/schema/ | 
        *StatesApi* | [**states_list**](docs/StatesApi.md#states_list) | **GET** /api/states/ | 
        *TelemetryApi* | [**telemetry_list**](docs/TelemetryApi.md#telemetry_list) | **GET** /api/telemetry/ | 
        *TelemetryApi* | [**telemetry_retrieve**](docs/TelemetryApi.md#telemetry_retrieve) | **GET** /api/telemetry/{id}/ | 
        
        
        ## Documentation For Models
        
         - [Company](docs/Company.md)
         - [Machine](docs/Machine.md)
         - [MachineCounterReading](docs/MachineCounterReading.md)
         - [MachineState](docs/MachineState.md)
         - [TelemetryValue](docs/TelemetryValue.md)
        
        
        ## Documentation For Authorization
        
        
        ## basicAuth
        
        - **Type**: HTTP basic authentication
        
        
        ## cookieAuth
        
        - **Type**: API key
        - **API key parameter name**: Session
        - **Location**: 
        
        
        ## jwtAuth
        
        - **Type**: Bearer authentication (Bearer)
        
        
        ## Author
        
        
        
        
        ## Notes for Large OpenAPI documents
        If the OpenAPI document is large, imports in openapi_client.apis and openapi_client.models may fail with a
        RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:
        
        Solution 1:
        Use specific imports for apis and models like:
        - `from openapi_client.api.default_api import DefaultApi`
        - `from openapi_client.model.pet import Pet`
        
        Solution 2:
        Before importing the package, adjust the maximum recursion limit as shown below:
        ```
        import sys
        sys.setrecursionlimit(1500)
        import openapi_client
        from openapi_client.apis import *
        from openapi_client.models import *
        ```
        
        
        
        # openapi_client.CompaniesApi
        
        All URIs are relative to *http://localhost*
        
        Method | HTTP request | Description
        ------------- | ------------- | -------------
        [**companies_list**](CompaniesApi.md#companies_list) | **GET** /api/companies/ | 
        [**companies_retrieve**](CompaniesApi.md#companies_retrieve) | **GET** /api/companies/{id}/ | 
        
        
        # **companies_list**
        > [Company] companies_list()
        
        
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import companies_api
        from openapi_client.model.company import Company
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = companies_api.CompaniesApi(api_client)
        
            # example, this endpoint has no required or optional parameters
            try:
                api_response = api_instance.companies_list()
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling CompaniesApi->companies_list: %s\n" % e)
        ```
        
        
        ### Parameters
        This endpoint does not need any parameter.
        
        ### Return type
        
        [**[Company]**](Company.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        # **companies_retrieve**
        > Company companies_retrieve(id)
        
        
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import companies_api
        from openapi_client.model.company import Company
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = companies_api.CompaniesApi(api_client)
            id = 1 # int | A unique integer value identifying this company.
        
            # example passing only required values which don't have defaults set
            try:
                api_response = api_instance.companies_retrieve(id)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling CompaniesApi->companies_retrieve: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **id** | **int**| A unique integer value identifying this company. |
        
        ### Return type
        
        [**Company**](Company.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        
        
        # Company
        
        
        ## Properties
        Name | Type | Description | Notes
        ------------ | ------------- | ------------- | -------------
        **id** | **int** |  | [readonly] 
        **name** | **str** |  | 
        
        [[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
        
        
        
        
        # Machine
        
        
        ## Properties
        Name | Type | Description | Notes
        ------------ | ------------- | ------------- | -------------
        **id** | **int** |  | [readonly] 
        **name** | **str** |  | 
        **location** | **str** |  | 
        **machine_id** | **str** |  | 
        **description** | **str** |  | 
        **type** | **str** |  | [optional] 
        **line** | **str** |  | [optional] 
        **lat** | **float, none_type** |  | [optional] 
        **lon** | **float, none_type** |  | [optional] 
        **picture** | **str, none_type** |  | [optional] 
        **cockpit_id** | **str** |  | [optional] 
        **cockpit_url** | **str, none_type** |  | [optional] 
        **owner** | **int, none_type** |  | [optional] 
        
        [[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
        
        
        
        
        # openapi_client.MachinecounterApi
        
        All URIs are relative to *http://localhost*
        
        Method | HTTP request | Description
        ------------- | ------------- | -------------
        [**machinecounter_list**](MachinecounterApi.md#machinecounter_list) | **GET** /api/machinecounter/ | 
        
        
        # **machinecounter_list**
        > [MachineCounterReading] machinecounter_list()
        
        
        
        Returns all Counter Readings from a Machine.
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import machinecounter_api
        from openapi_client.model.machine_counter_reading import MachineCounterReading
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = machinecounter_api.MachinecounterApi(api_client)
            counter = 1 # int |  (optional)
            machine = 1 # int | machine (optional)
            timestamp_from = dateutil_parser('1970-01-01T00:00:00.00Z') # datetime |  (optional)
            timestamp_to = dateutil_parser('1970-01-01T00:00:00.00Z') # datetime |  (optional)
        
            # example passing only required values which don't have defaults set
            # and optional values
            try:
                api_response = api_instance.machinecounter_list(counter=counter, machine=machine, timestamp_from=timestamp_from, timestamp_to=timestamp_to)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling MachinecounterApi->machinecounter_list: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **counter** | **int**|  | [optional]
         **machine** | **int**| machine | [optional]
         **timestamp_from** | **datetime**|  | [optional]
         **timestamp_to** | **datetime**|  | [optional]
        
        ### Return type
        
        [**[MachineCounterReading]**](MachineCounterReading.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        
        
        # MachineCounterReading
        
        
        ## Properties
        Name | Type | Description | Notes
        ------------ | ------------- | ------------- | -------------
        **id** | **int** |  | [readonly] 
        **counter_name** | **str** |  | [readonly] 
        **timestamp** | **datetime** |  | 
        **value** | **int** |  | 
        **counter** | **int** |  | 
        
        [[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
        
        
        
        
        # openapi_client.MachinecounterreadingsApi
        
        All URIs are relative to *http://localhost*
        
        Method | HTTP request | Description
        ------------- | ------------- | -------------
        [**machinecounterreadings_list**](MachinecounterreadingsApi.md#machinecounterreadings_list) | **GET** /api/machinecounterreadings/ | 
        
        
        # **machinecounterreadings_list**
        > [MachineCounterReading] machinecounterreadings_list()
        
        
        
        Returns all Counter Readings from a Machine.
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import machinecounterreadings_api
        from openapi_client.model.machine_counter_reading import MachineCounterReading
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = machinecounterreadings_api.MachinecounterreadingsApi(api_client)
            counter = 1 # int |  (optional)
            machine = 1 # int | machine (optional)
            timestamp_from = dateutil_parser('1970-01-01T00:00:00.00Z') # datetime |  (optional)
            timestamp_to = dateutil_parser('1970-01-01T00:00:00.00Z') # datetime |  (optional)
        
            # example passing only required values which don't have defaults set
            # and optional values
            try:
                api_response = api_instance.machinecounterreadings_list(counter=counter, machine=machine, timestamp_from=timestamp_from, timestamp_to=timestamp_to)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling MachinecounterreadingsApi->machinecounterreadings_list: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **counter** | **int**|  | [optional]
         **machine** | **int**| machine | [optional]
         **timestamp_from** | **datetime**|  | [optional]
         **timestamp_to** | **datetime**|  | [optional]
        
        ### Return type
        
        [**[MachineCounterReading]**](MachineCounterReading.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        
        
        # openapi_client.MachinesApi
        
        All URIs are relative to *http://localhost*
        
        Method | HTTP request | Description
        ------------- | ------------- | -------------
        [**machines_list**](MachinesApi.md#machines_list) | **GET** /api/machines/ | 
        [**machines_retrieve**](MachinesApi.md#machines_retrieve) | **GET** /api/machines/{id}/ | 
        
        
        # **machines_list**
        > [Machine] machines_list()
        
        
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import machines_api
        from openapi_client.model.machine import Machine
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = machines_api.MachinesApi(api_client)
            name = "name_example" # str |  (optional)
            owner = 1 # int |  (optional)
        
            # example passing only required values which don't have defaults set
            # and optional values
            try:
                api_response = api_instance.machines_list(name=name, owner=owner)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling MachinesApi->machines_list: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **name** | **str**|  | [optional]
         **owner** | **int**|  | [optional]
        
        ### Return type
        
        [**[Machine]**](Machine.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        # **machines_retrieve**
        > Machine machines_retrieve(id)
        
        
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import machines_api
        from openapi_client.model.machine import Machine
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = machines_api.MachinesApi(api_client)
            id = 1 # int | A unique integer value identifying this machine.
        
            # example passing only required values which don't have defaults set
            try:
                api_response = api_instance.machines_retrieve(id)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling MachinesApi->machines_retrieve: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **id** | **int**| A unique integer value identifying this machine. |
        
        ### Return type
        
        [**Machine**](Machine.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        
        
        # MachineState
        
        
        ## Properties
        Name | Type | Description | Notes
        ------------ | ------------- | ------------- | -------------
        **id** | **int** |  | [readonly] 
        **timestamp_recorded** | **datetime** |  | 
        **timestamp_received** | **datetime** |  | 
        **available** | **bool** |  | 
        **productive** | **bool** |  | 
        **machine** | **int** |  | 
        **state_automatic** | **int, none_type** |  | [optional] 
        **state_manual** | **int, none_type** |  | [optional] 
        **state_description_automatic** | **str, none_type** |  | [optional] 
        **state_description_manual** | **str, none_type** |  | [optional] 
        **state_color** | **str, none_type** |  | [optional] 
        
        [[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
        
        
        
        
        # openapi_client.SchemaApi
        
        All URIs are relative to *http://localhost*
        
        Method | HTTP request | Description
        ------------- | ------------- | -------------
        [**schema_retrieve**](SchemaApi.md#schema_retrieve) | **GET** /api/schema/ | 
        
        
        # **schema_retrieve**
        > {str: (bool, date, datetime, dict, float, int, list, str, none_type)} schema_retrieve()
        
        
        
        OpenApi3 schema for this API. Format can be selected via content negotiation.  - YAML: application/vnd.oai.openapi - JSON: application/vnd.oai.openapi+json
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import schema_api
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = schema_api.SchemaApi(api_client)
            format = "json" # str |  (optional)
            lang = "af" # str |  (optional)
        
            # example passing only required values which don't have defaults set
            # and optional values
            try:
                api_response = api_instance.schema_retrieve(format=format, lang=lang)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling SchemaApi->schema_retrieve: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **format** | **str**|  | [optional]
         **lang** | **str**|  | [optional]
        
        ### Return type
        
        **{str: (bool, date, datetime, dict, float, int, list, str, none_type)}**
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/vnd.oai.openapi, application/yaml, application/vnd.oai.openapi+json, application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        
        
        # openapi_client.StatesApi
        
        All URIs are relative to *http://localhost*
        
        Method | HTTP request | Description
        ------------- | ------------- | -------------
        [**states_list**](StatesApi.md#states_list) | **GET** /api/states/ | 
        
        
        # **states_list**
        > [MachineState] states_list()
        
        
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import states_api
        from openapi_client.model.machine_state import MachineState
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = states_api.StatesApi(api_client)
            machine = 1 # int |  (optional)
            timestamp_from = dateutil_parser('1970-01-01T00:00:00.00Z') # datetime |  (optional)
            timestamp_to = dateutil_parser('1970-01-01T00:00:00.00Z') # datetime |  (optional)
        
            # example passing only required values which don't have defaults set
            # and optional values
            try:
                api_response = api_instance.states_list(machine=machine, timestamp_from=timestamp_from, timestamp_to=timestamp_to)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling StatesApi->states_list: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **machine** | **int**|  | [optional]
         **timestamp_from** | **datetime**|  | [optional]
         **timestamp_to** | **datetime**|  | [optional]
        
        ### Return type
        
        [**[MachineState]**](MachineState.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        
        
        # openapi_client.TelemetryApi
        
        All URIs are relative to *http://localhost*
        
        Method | HTTP request | Description
        ------------- | ------------- | -------------
        [**telemetry_list**](TelemetryApi.md#telemetry_list) | **GET** /api/telemetry/ | 
        [**telemetry_retrieve**](TelemetryApi.md#telemetry_retrieve) | **GET** /api/telemetry/{id}/ | 
        
        
        # **telemetry_list**
        > [TelemetryValue] telemetry_list()
        
        
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import telemetry_api
        from openapi_client.model.telemetry_value import TelemetryValue
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = telemetry_api.TelemetryApi(api_client)
            app_name = "app_name_example" # str |  (optional)
            machine = 1 # int |  (optional)
            name = "name_example" # str |  (optional)
        
            # example passing only required values which don't have defaults set
            # and optional values
            try:
                api_response = api_instance.telemetry_list(app_name=app_name, machine=machine, name=name)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling TelemetryApi->telemetry_list: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **app_name** | **str**|  | [optional]
         **machine** | **int**|  | [optional]
         **name** | **str**|  | [optional]
        
        ### Return type
        
        [**[TelemetryValue]**](TelemetryValue.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        # **telemetry_retrieve**
        > TelemetryValue telemetry_retrieve(id)
        
        
        
        ### Example
        
        * Basic Authentication (basicAuth):
        * Api Key Authentication (cookieAuth):
        * Bearer (Bearer) Authentication (jwtAuth):
        ```python
        import time
        import openapi_client
        from openapi_client.api import telemetry_api
        from openapi_client.model.telemetry_value import TelemetryValue
        from pprint import pprint
        # Defining the host is optional and defaults to http://localhost
        # See configuration.py for a list of all supported configuration parameters.
        configuration = openapi_client.Configuration(
            host = "http://localhost"
        )
        
        # The client must configure the authentication and authorization parameters
        # in accordance with the API server security policy.
        # Examples for each auth method are provided below, use the example that
        # satisfies your auth use case.
        
        # Configure HTTP basic authorization: basicAuth
        configuration = openapi_client.Configuration(
            username = 'YOUR_USERNAME',
            password = 'YOUR_PASSWORD'
        )
        
        # Configure API key authorization: cookieAuth
        configuration.api_key['cookieAuth'] = 'YOUR_API_KEY'
        
        # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
        # configuration.api_key_prefix['cookieAuth'] = 'Bearer'
        
        # Configure Bearer authorization (Bearer): jwtAuth
        configuration = openapi_client.Configuration(
            access_token = 'YOUR_BEARER_TOKEN'
        )
        
        # Enter a context with an instance of the API client
        with openapi_client.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            api_instance = telemetry_api.TelemetryApi(api_client)
            id = 1 # int | A unique integer value identifying this telemetry value.
        
            # example passing only required values which don't have defaults set
            try:
                api_response = api_instance.telemetry_retrieve(id)
                pprint(api_response)
            except openapi_client.ApiException as e:
                print("Exception when calling TelemetryApi->telemetry_retrieve: %s\n" % e)
        ```
        
        
        ### Parameters
        
        Name | Type | Description  | Notes
        ------------- | ------------- | ------------- | -------------
         **id** | **int**| A unique integer value identifying this telemetry value. |
        
        ### Return type
        
        [**TelemetryValue**](TelemetryValue.md)
        
        ### Authorization
        
        [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth), [jwtAuth](../README.md#jwtAuth)
        
        ### HTTP request headers
        
         - **Content-Type**: Not defined
         - **Accept**: application/json
        
        
        ### HTTP response details
        | Status code | Description | Response headers |
        |-------------|-------------|------------------|
        **200** |  |  -  |
        
        [[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)
        
        
        
        # TelemetryValue
        
        
        ## Properties
        Name | Type | Description | Notes
        ------------ | ------------- | ------------- | -------------
        **id** | **int** |  | [readonly] 
        **app_name** | **str** |  | 
        **name** | **str** |  | 
        **machine** | **int** |  | 
        **iotdb_string** | **str, none_type** |  | [optional] 
        
        [[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)
        
        
        
        
        # RELEASE NOTES
        
        ## 0.2.3
        
        * Added Counter Name in MachineCounterReading
Keywords: OpenAPI,OpenAPI-Generator,Portal OpenAPI
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
